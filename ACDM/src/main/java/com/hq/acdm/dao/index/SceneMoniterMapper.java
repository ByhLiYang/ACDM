package com.hq.acdm.dao.index;

import com.hq.acdm.vo.index.FlightFulInfoVo;
import com.hq.acdm.vo.index.StandStatusVo;
import org.apache.ibatis.annotations.Select;

import java.math.BigDecimal;
import java.util.List;

/**
 * @author LiFaQiang
 * @date 2018/11/16 15:13
 * @Description
 */
public interface SceneMoniterMapper {
    @Select({"SELECT COUNT(*) FROM V_UTIL_DAILY_FLIGHT"})
    int findFlightSum();
    @Select({"SELECT COUNT(*) FROM V_UTIL_DAILY_FLIGHT WHERE A_OR_D='A' AND ALDT IS NOT NULL"})
    int findArrivalNumerator();
    @Select({"SELECT * FROM V_UTIL_DAILY_FLIGHT_A"})
    int findArrivalDenominator();
    @Select({"SELECT COUNT(*) FROM V_UTIL_DAILY_FLIGHT WHERE A_OR_D='D' AND ATOT IS NOT NULL"})
    int findDepartureNumerator();
    @Select({"SELECT * FROM V_UTIL_DAILY_FLIGHT_D"})
    int findDepartureDenominator();
    @Select({"SELECT COUNT(*) FROM V_UTIL_DAILY_FLIGHT AA LEFT JOIN DAILY_FLIGHT_ADD_DETAILS BB ",
            "  ON AA.FLIGHT_NO_IATA = BB.FLIGHT_NO_IATA AND AA.OPERATIONAL_DATE = BB.OPERATIONAL_DATE AND AA.A_OR_D = BB.A_OR_D AND AA.FLIGHT_REPEAT_COUNT = BB.FLIGHT_REPEAT_COUNT ",
            "WHERE AA.A_OR_D ='A' AND ",
            "  (AA.AIBT < CURRENT_TIMESTAMP OR AA.SIBT < CURRENT_TIMESTAMP OR AA.ALDT < CURRENT_TIMESTAMP) AND ",
            "  nvl(BB.FLIGHT_CANCEL_CODE,' ') <> 'C' AND nvl(BB.CODE_SHARE_STATUS,' ') <> 'SF' AND ",
            "  BB.FLIGHT_CLASS_CODE IN ('L/W', 'W/Z', 'C/B') AND ",
            "(  (  AA.ALDT IS NOT NULL AND to_char(AA.SIBT,'YYYY-MM-DD HH24:MI:SS')  < to_char(AA.ALDT - 30/(24*60),'YYYY-MM-DD HH24:MI:SS')  ",
            "    ) OR (AA.ATOT IS NULL AND to_char(AA.SIBT,'YYYY-MM-DD HH24:MI:SS')  < to_char(CURRENT_TIMESTAMP - 30/(24*60),'YYYY-MM-DD HH24:MI:SS')))"})
    BigDecimal findNormalRateNumeratorA();
    @Select({"SELECT COUNT(FLIGHT_NO_IATA) AS FLIGHT_NUM FROM V_UTIL_DAILY_FLIGHT WHERE SIBT <= CURRENT_TIMESTAMP - 30/(24*60) AND A_OR_D = 'A'"})
    BigDecimal findnormalRateDenominatorA();
    @Select({"SELECT COUNT(*) FROM V_UTIL_DAILY_FLIGHT AA LEFT JOIN DAILY_FLIGHT_ADD_DETAILS BB ",
            "  ON AA.FLIGHT_NO_IATA = BB.FLIGHT_NO_IATA AND AA.OPERATIONAL_DATE = BB.OPERATIONAL_DATE AND AA.A_OR_D = BB.A_OR_D AND AA.FLIGHT_REPEAT_COUNT = BB.FLIGHT_REPEAT_COUNT ",
            "WHERE AA.A_OR_D ='D' AND ",
            "  (AA.AOBT < CURRENT_TIMESTAMP OR AA.SOBT < CURRENT_TIMESTAMP OR AA.ATOT < CURRENT_TIMESTAMP) AND ",
            "  nvl(BB.FLIGHT_CANCEL_CODE,' ') <> 'C' AND nvl(BB.CODE_SHARE_STATUS,' ') <> 'SF' AND ",
            "  BB.FLIGHT_CLASS_CODE IN ('L/W', 'W/Z', 'C/B') AND ",
            "(  (  AA.ATOT IS NOT NULL AND to_char(AA.SOBT,'YYYY-MM-DD HH24:MI:SS')  < to_char(AA.ATOT - 30/(24*60),'YYYY-MM-DD HH24:MI:SS')  ",
            "    ) OR (AA.ATOT IS NULL AND to_char(AA.SOBT,'YYYY-MM-DD HH24:MI:SS')  < to_char(CURRENT_TIMESTAMP - 30/(24*60),'YYYY-MM-DD HH24:MI:SS')))"})
    BigDecimal findNormalRateNumeratorD();
    @Select({"SELECT COUNT(FLIGHT_NO_IATA) AS FLIGHT_NUM FROM V_UTIL_DAILY_FLIGHT WHERE SOBT <= CURRENT_TIMESTAMP - 30/(24*60) AND A_OR_D = 'D'"})
    BigDecimal findnormalRateDenominatorD();
    @Select({"select SUM(STANDS) FreeStandT1 from V_FREESTAND_SUM WHERE TERMINAL='1'"})
    int findFreeStandT1();
    @Select({"select SUM(STANDS) FreeStandT2 from V_FREESTAND_SUM WHERE TERMINAL='2'"})
    int findFreeStandT2();
    @Select({"SELECT SIBT,SOBT,FLIGHT_NO_IATA_A FLIGHT_NO_IATA,ARN,CC.DESCRIPTION ORIGIN_CNAME,COALESCE(DD.DESCRIPTION,'上海 虹桥') DEST_CNAME,EE.DESCRIPTION VIA_CNAME,\n" +
            "('T' || AIRCRAFT_TERMINAL_CODE) AIRCRAFT_TERMINAL_CODE,GATE,STAND,\"TYPE\",EXOT,AXOT,FLIGHT_CLASS_CODE,FLIGHT_SERVICE_TYPE,FLIGHT_NATURE_CODE,\n" +
            "FLIGHT_NO_IATA_A,OPERATIONAL_DATE_A,TO_CHAR(PRE_ATOT,'HH24:MI') PRE_ATOT,TO_CHAR(ALDT,'HH24:MI') ALDT,TO_CHAR(A_GROUND_TRANSFER,'HH24:MI') A_GROUND_TRANSFER,\n" +
            "TO_CHAR(AIBT,'HH24:MI') AIBT_SHORT,TO_CHAR(AIBT -INTERVAL '8' HOUR,'YYYY-MM-DD HH24:MI:SS') AIBT,TO_CHAR(ARSL,'HH24:MI') ARSL,TO_CHAR(ATDO,'HH24:MI') ATDO,TO_CHAR(ATFO,'HH24:MI') ATFO,FLIGHT_NO_IATA_D,\n" +
            "OPERATIONAL_DATE_D,TO_CHAR(COALESCE(BB.ASCT,AA.ASCT),'HH24:MI') ASCT,TO_CHAR(COALESCE(BB.AFCT,AA.AFCT),'HH24:MI') AFCT,TO_CHAR(ASR,'HH24:MI')ASR,\n" +
            "TO_CHAR(AER,'HH24:MI') AER,TO_CHAR(\"ASC\",'HH24:MI') \"ASC\",TO_CHAR(AEC,'HH24:MI') AEC,TO_CHAR(ASBT,'HH24:MI') ASBT,TO_CHAR(AEBT,'HH24:MI') AEBT,\n" +
            "TO_CHAR(ATDC,'HH24:MI') ATDC,TO_CHAR(ATFC,'HH24:MI') ATFC,TO_CHAR(AACT,'HH24:MI') AACT,TO_CHAR(LSW,'HH24:MI') LSW,TO_CHAR(AOBT,'HH24:MI') AOBT_SHORT,TO_CHAR(AOBT -INTERVAL '8' HOUR,'YYYY-MM-DD HH24:MI:SS') AOBT,\n" +
            "TO_CHAR(D_GROUND_TRANSFER,'HH24:MI') D_GROUND_TRANSFER,TO_CHAR(ATOT,'HH24:MI') ATOT,FLIGHT_REPEAT_COUNT_D,FLIGHT_REPEAT_COUNT_A \n" +
            "FROM (SELECT TA.AIRLINE_CODE_ICAO,TA.SIBT,TA.FLIGHT_NO_IATA FLIGHT_NO_IATA_A,TA.OPERATIONAL_DATE OPERATIONAL_DATE_A,TA.A_OR_D,TA.FLIGHT_REPEAT_COUNT FLIGHT_REPEAT_COUNT_A,\n" +
            "  TB.LNK_CARRIER_CODE,TB.LNK_FLIGHT_NO,TB.LNK_FLIGHT_SUFFIX,TB.LNK_FLIGHT_REPEAT_COUNT,TB.LNK_SCHEDULE_DATE,TA.ARN,TA.ORIGIN_AIRPORT_IATA,TA.DEST_AIRPORT_IATA,\n" +
            "  (COALESCE(TB.AIRPORT_VIA_IATA_2,'') || COALESCE(TB.AIRPORT_VIA_IATA_3,'')) AIRPORT_VIA_IATA,TB.AIRCRAFT_TERMINAL_CODE,\n" +
            "  COALESCE(TA.GATE_1,TA.GATE_2,TA.GATE_3) GATE,TA.STAND,TA.\"TYPE\",TA.EXOT,TA.AXOT,TB.FLIGHT_CLASS_CODE,TB.FLIGHT_SERVICE_TYPE,TB.FLIGHT_NATURE_CODE,\n" +
            "  TA.ATOT PRE_ATOT,TA.ALDT,TA.A_GROUND_TRANSFER,COALESCE(TA.AIBT,TB.AIBT_1,TB.AIBT_2,TB.AIBT_3,TC.ALDT) AIBT,TA.ARSL,TA.ATDO,TA.ATFO,TA.ASCT,TA.AFCT\n" +
            "  FROM DAILY_FLIGHT_MASTER TA LEFT JOIN DAILY_FLIGHT_ADD_DETAILS TB \n" +
            "  ON TA.FLIGHT_NO_IATA=TB.FLIGHT_NO_IATA AND TA.OPERATIONAL_DATE=TB.OPERATIONAL_DATE AND TA.A_OR_D=TB.A_OR_D \n" +
            "  LEFT JOIN DAILY_FLIGHT_AIRLINES TC  \n" +
            "  ON TA.FLIGHT_NO_IATA=TC.FLIGHT_NO_IATA AND TA.OPERATIONAL_DATE=TC.OPERATIONAL_DATE AND TA.A_OR_D=TC.A_OR_D  \n" +
            "  WHERE NVL(TB.CODE_SHARE_STATUS  ,' ')<>'SF' AND NVL(TB.FLIGHT_CANCEL_CODE  ,' ')<>'C' AND TB.FLIGHT_CLASS_CODE IN ('L/W','W/Z','C/B') \n" +
            "  AND TA.A_OR_D='A' AND TO_CHAR(TA.OPERATIONAL_DATE, 'yyyy-MM-dd') = TO_CHAR(SYSDATE,'yyyy-MM-dd') )AA  \n" +
            "  LEFT JOIN (SELECT T1.SOBT,T1.FLIGHT_NO_IATA FLIGHT_NO_IATA_D,T1.OPERATIONAL_DATE OPERATIONAL_DATE_D,T1.A_OR_D,T1.FLIGHT_REPEAT_COUNT FLIGHT_REPEAT_COUNT_D, \n" +
            "  T1.ASCT,T1.AFCT,T1.ASR,T1.AER, T1.TASC \"ASC\",T1.AEC,COALESCE(T1.ASBT,T2.GATE_1_OPENDATETIME) ASBT, COALESCE(T1.AEBT,T2.GATE_1_CLOSEDATETIME) AEBT, \n" +
            "  T1.ATDC,T1.ATFC,T1.AACT,T1.LSW, COALESCE(T1.AOBT,T2.AOBT_1,T2.AOBT_2,T2.AOBT_3,T3.ATOT) AOBT,T1.D_GROUND_TRANSFER,T1.ATOT \n" +
            "  FROM DAILY_FLIGHT_MASTER T1 LEFT JOIN DAILY_FLIGHT_ADD_DETAILS T2\n" +
            "  ON T1.FLIGHT_NO_IATA=T2.FLIGHT_NO_IATA AND T1.OPERATIONAL_DATE=T2.OPERATIONAL_DATE AND T1.A_OR_D=T2.A_OR_D  \n" +
            "  LEFT JOIN DAILY_FLIGHT_AIRLINES T3 \n" +
            "  ON T1.FLIGHT_NO_IATA=T3.FLIGHT_NO_IATA AND T1.OPERATIONAL_DATE=T3.OPERATIONAL_DATE AND T1.A_OR_D=T3.A_OR_D \n" +
            "  WHERE NVL(T2.CODE_SHARE_STATUS  ,' ')<>'SF' AND NVL(T2.FLIGHT_CANCEL_CODE  ,' ')<>'C' AND T2.FLIGHT_CLASS_CODE IN ('L/W','W/Z','C/B') AND T1.A_OR_D='D') BB \n" +
            "  ON (AA.LNK_CARRIER_CODE || AA.LNK_FLIGHT_NO || COALESCE(AA.LNK_FLIGHT_SUFFIX,''))=BB.FLIGHT_NO_IATA_D AND \n" +
            "  AA.LNK_FLIGHT_REPEAT_COUNT=BB.FLIGHT_REPEAT_COUNT_D AND AA.LNK_SCHEDULE_DATE = BB.OPERATIONAL_DATE_D \n" +
            "  LEFT JOIN LOCATION CC ON AA.ORIGIN_AIRPORT_IATA = CC.IATA_CODE\n" +
            "  LEFT JOIN LOCATION DD ON AA.DEST_AIRPORT_IATA = DD.IATA_CODE\n" +
            "  LEFT JOIN LOCATION EE ON AA.AIRPORT_VIA_IATA = EE.IATA_CODE" +
            "  WHERE AA.AIRLINE_CODE_ICAO || SUBSTR(AA.FLIGHT_NO_IATA_A,3,6)=#{flight_no_iata,jdbcType=VARCHAR}"})
    FlightFulInfoVo findFlightFullInfoA(String flight_no_iata);
    @Select({"SELECT SIBT,SOBT,FLIGHT_NO_IATA_D FLIGHT_NO_IATA,ARN,COALESCE(CC.DESCRIPTION,'上海 虹桥') ORIGIN_CNAME,DD.DESCRIPTION DEST_CNAME,EE.DESCRIPTION VIA_CNAME,\n" +
            "('T' || AIRCRAFT_TERMINAL_CODE) AIRCRAFT_TERMINAL_CODE,GATE,STAND,\"TYPE\",EXOT,AXOT,FLIGHT_CLASS_CODE,FLIGHT_SERVICE_TYPE,FLIGHT_NATURE_CODE,\n" +
            "FLIGHT_NO_IATA_A,OPERATIONAL_DATE_A,TO_CHAR(PRE_ATOT,'HH24:MI') PRE_ATOT,TO_CHAR(ALDT,'HH24:MI') ALDT,TO_CHAR(A_GROUND_TRANSFER,'HH24:MI') A_GROUND_TRANSFER,\n" +
            "TO_CHAR(AIBT,'HH24:MI') AIBT_SHORT,TO_CHAR(AIBT -INTERVAL '8' HOUR,'YYYY-MM-DD HH24:MI:SS') AIBT,TO_CHAR(ARSL,'HH24:MI') ARSL,TO_CHAR(ATDO,'HH24:MI') ATDO,TO_CHAR(ATFO,'HH24:MI') ATFO,FLIGHT_NO_IATA_D,\n" +
            "OPERATIONAL_DATE_D,TO_CHAR(COALESCE(BB.ASCT,AA.ASCT),'HH24:MI') ASCT,TO_CHAR(COALESCE(BB.AFCT,AA.AFCT),'HH24:MI') AFCT,TO_CHAR(ASR,'HH24:MI')ASR,\n" +
            "TO_CHAR(AER,'HH24:MI') AER,TO_CHAR(\"ASC\",'HH24:MI') \"ASC\",TO_CHAR(AEC,'HH24:MI') AEC,TO_CHAR(ASBT,'HH24:MI') ASBT,TO_CHAR(AEBT,'HH24:MI') AEBT,\n" +
            "TO_CHAR(ATDC,'HH24:MI') ATDC,TO_CHAR(ATFC,'HH24:MI') ATFC,TO_CHAR(AACT,'HH24:MI') AACT,TO_CHAR(LSW,'HH24:MI') LSW,TO_CHAR(AOBT,'HH24:MI') AOBT_SHORT,\n" +
            "TO_CHAR(AOBT -INTERVAL '8' HOUR,'YYYY-MM-DD HH24:MI:SS') AOBT,TO_CHAR(D_GROUND_TRANSFER,'HH24:MI') D_GROUND_TRANSFER,TO_CHAR(ATOT,'HH24:MI') ATOT,FLIGHT_REPEAT_COUNT_D,FLIGHT_REPEAT_COUNT_A  FROM \n" +
            "(SELECT TA.SIBT,TA.FLIGHT_NO_IATA FLIGHT_NO_IATA_A,TA.OPERATIONAL_DATE OPERATIONAL_DATE_A,TA.A_OR_D,TA.FLIGHT_REPEAT_COUNT FLIGHT_REPEAT_COUNT_A,\n" +
            "  TB.LNK_CARRIER_CODE,TB.LNK_FLIGHT_NO,TB.LNK_FLIGHT_SUFFIX,TB.LNK_FLIGHT_REPEAT_COUNT,TB.LNK_SCHEDULE_DATE,\n" +
            "  TA.ATOT PRE_ATOT,TA.ALDT,TA.A_GROUND_TRANSFER,COALESCE(TA.AIBT,TB.AIBT_1,TB.AIBT_2,TB.AIBT_3,TC.ALDT) AIBT,TA.ARSL,TA.ATDO,TA.ATFO,TA.ASCT,TA.AFCT\n" +
            "  FROM DAILY_FLIGHT_MASTER TA LEFT JOIN DAILY_FLIGHT_ADD_DETAILS TB \n" +
            "  ON TA.FLIGHT_NO_IATA=TB.FLIGHT_NO_IATA AND TA.OPERATIONAL_DATE=TB.OPERATIONAL_DATE AND TA.A_OR_D=TB.A_OR_D \n" +
            "  LEFT JOIN DAILY_FLIGHT_AIRLINES TC  \n" +
            "  ON TA.FLIGHT_NO_IATA=TC.FLIGHT_NO_IATA AND TA.OPERATIONAL_DATE=TC.OPERATIONAL_DATE AND TA.A_OR_D=TC.A_OR_D  \n" +
            "  WHERE NVL(TB.CODE_SHARE_STATUS  ,' ')<>'SF' AND NVL(TB.FLIGHT_CANCEL_CODE  ,' ')<>'C' AND TB.FLIGHT_CLASS_CODE IN ('L/W','W/Z','C/B') \n" +
            "  AND TA.A_OR_D='A' AND TO_CHAR(TA.OPERATIONAL_DATE, 'yyyy-MM-dd') = TO_CHAR(SYSDATE,'yyyy-MM-dd') )AA  RIGHT JOIN \n" +
            "  (SELECT T1.AIRLINE_CODE_ICAO,T1.SOBT,T1.FLIGHT_NO_IATA FLIGHT_NO_IATA_D,T1.OPERATIONAL_DATE OPERATIONAL_DATE_D,T1.A_OR_D,T1.FLIGHT_REPEAT_COUNT FLIGHT_REPEAT_COUNT_D,\n" +
            "  T1.ARN,T1.ORIGIN_AIRPORT_IATA,T1.DEST_AIRPORT_IATA,CASE WHEN T2.AIRPORT_VIA_IATA_2 IS NOT NULL THEN T2.AIRPORT_VIA_IATA_1 END AIRPORT_VIA_IATA,\n" +
            "  T2.AIRCRAFT_TERMINAL_CODE,COALESCE(T1.GATE_1,T1.GATE_2,T1.GATE_3) GATE,T1.STAND,T1.\"TYPE\",T1.EXOT,T1.AXOT,T2.FLIGHT_CLASS_CODE,T2.FLIGHT_SERVICE_TYPE,T2.FLIGHT_NATURE_CODE, \n" +
            "  T1.ASCT,T1.AFCT,T1.ASR,T1.AER, T1.TASC \"ASC\",T1.AEC,COALESCE(T1.ASBT,T2.GATE_1_OPENDATETIME) ASBT, COALESCE(T1.AEBT,T2.GATE_1_CLOSEDATETIME) AEBT, \n" +
            "  T1.ATDC,T1.ATFC,T1.AACT,T1.LSW, COALESCE(T1.AOBT,T2.AOBT_1,T2.AOBT_2,T2.AOBT_3,T3.ATOT) AOBT,T1.D_GROUND_TRANSFER,T1.ATOT \n" +
            "  FROM DAILY_FLIGHT_MASTER T1 LEFT JOIN DAILY_FLIGHT_ADD_DETAILS T2\n" +
            "  ON T1.FLIGHT_NO_IATA=T2.FLIGHT_NO_IATA AND T1.OPERATIONAL_DATE=T2.OPERATIONAL_DATE AND T1.A_OR_D=T2.A_OR_D  \n" +
            "  LEFT JOIN DAILY_FLIGHT_AIRLINES T3 \n" +
            "  ON T1.FLIGHT_NO_IATA=T3.FLIGHT_NO_IATA AND T1.OPERATIONAL_DATE=T3.OPERATIONAL_DATE AND T1.A_OR_D=T3.A_OR_D \n" +
            "  WHERE NVL(T2.CODE_SHARE_STATUS  ,' ')<>'SF' AND NVL(T2.FLIGHT_CANCEL_CODE  ,' ')<>'C' AND T2.FLIGHT_CLASS_CODE IN ('L/W','W/Z','C/B') AND T1.A_OR_D='D') BB \n" +
            "  ON (AA.LNK_CARRIER_CODE || AA.LNK_FLIGHT_NO || COALESCE(AA.LNK_FLIGHT_SUFFIX,''))=BB.FLIGHT_NO_IATA_D AND \n" +
            "  AA.LNK_FLIGHT_REPEAT_COUNT=BB.FLIGHT_REPEAT_COUNT_D AND AA.LNK_SCHEDULE_DATE = BB.OPERATIONAL_DATE_D \n" +
            "  LEFT JOIN LOCATION CC ON BB.ORIGIN_AIRPORT_IATA = CC.IATA_CODE\n" +
            "  LEFT JOIN LOCATION DD ON BB.DEST_AIRPORT_IATA = DD.IATA_CODE\n" +
            "  LEFT JOIN LOCATION EE ON BB.AIRPORT_VIA_IATA = EE.IATA_CODE" +
            "  WHERE BB.AIRLINE_CODE_ICAO || SUBSTR(BB.FLIGHT_NO_IATA_D,3,6)=#{flight_no_iata,jdbcType=VARCHAR}"})
    FlightFulInfoVo findFlightFullInfoD(String flight_no_iata);
    @Select({"SELECT T1.DESCRIPTION,'T' || T1.TERMINAL TERMINAL,T1.IS_REMOTE,ROUND((cast(T2.SOT as date)-cast(T2.AIT as date))*24*60,0) SKT,\n" +
            "TO_CHAR(T2.AIT,'HH24:MI') AIT,TO_CHAR(T2.AIT,'YYYY-MM-DD HH24:MI') AIT_D,T2.STAND,TO_CHAR(T2.SIT,'HH24:MI') SIT,TO_CHAR(T2.SIT,'YYYY-MM-DD HH24:MI') SIT_D," +
            "TO_CHAR(T2.SOT,'HH24:MI') SOT, TO_CHAR(T2.SOT,'YYYY-MM-DD HH24:MI') SOT_D,T2.FLIGHT_NO_IATA,T2.OPERATIONAL_DATE,T2.A_OR_D\n" +
            "FROM STAND T1 RIGHT JOIN v_cur_stand T2 ON T1.STAND=T2.STAND \n" +
            "RIGHT JOIN (SELECT STAND FROM (SELECT STAND,COUNT(*) CNT FROM v_cur_stand GROUP BY STAND) \n" +
            "WHERE CNT < 2) T3 ON T2.STAND=T3.STAND WHERE T2.AIT IS NOT NULL\n "})
    List<StandStatusVo> findOccupyStand();
    @Select({"SELECT T1.DESCRIPTION,'T' || T1.TERMINAL TERMINAL,T1.IS_REMOTE,TO_CHAR(T2.AIT,'HH24:MI') AIT,TO_CHAR(T2.AIT,'YYYY-MM-DD HH24:MI') AIT_D,TO_CHAR(T2.SIT,'HH24:MI') SIT,\n" +
            "TO_CHAR(T2.SIT,'YYYY-MM-DD HH24:MI') SIT_D,TO_CHAR(T2.SOT,'HH24:MI') SOT,TO_CHAR(T2.SOT,'YYYY-MM-DD HH24:MI') SOT_D,T2.STAND,T2.FLIGHT_NO_IATA,T2.OPERATIONAL_DATE,\n" +
            "T2.A_OR_D,ROUND((cast(T3.SOT as date)-cast(T2.AIT as date))*24*60,0) SKT,TO_CHAR(T3.SIT,'HH24:MI') SCT,TO_CHAR(T3.SIT,'YYYY-MM-DD HH24:MI') SCT_D,\n" +
            " ROUND(abs(cast(T2.SOT as date)-cast(coalesce(T3.AIT,T3.SIT) as date))*24*60,0) SCKT,TO_CHAR(T3.SOT,'HH24:MI') CSOBT,\n" +
            " TO_CHAR(T3.SOT,'YYYY-MM-DD HH24:MI') CSOBT_D,T3.FLIGHT_NO_IATA FLIGHT_NO_IATA_C FROM (SELECT BB.* FROM v_cur_stand BB RIGHT JOIN (SELECT STAND,MIN(AIT) AIT FROM \n" +
            "(SELECT A2.* FROM v_cur_stand A2 RIGHT JOIN (SELECT STAND FROM (SELECT STAND,COUNT(*) CNT FROM v_cur_stand GROUP BY STAND) WHERE CNT >= 2) A3 \n" +
            "ON A2.STAND=A3.STAND) GROUP BY STAND) AA ON BB.STAND=AA.STAND AND BB.AIT=AA.AIT) T2 INNER JOIN \n" +
            " v_cur_stand T3 ON T2.STAND=T3.STAND AND T2.FLIGHT_NO_IATA<>T3.FLIGHT_NO_IATA LEFT JOIN STAND T1 ON T2.STAND=T1.STAND"})
    List<StandStatusVo> findConfictStand();
}
