<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hq.acdm.dao.dynamicFlight.FltMonitorMapper" >

  <resultMap id="ResultMap" type="com.hq.acdm.vo.dynamicFlight.TLocalFlightInfoVo" >
    <result column="FLIGHT_ID_D" property="flightIdD" jdbcType="VARCHAR" />
    <result column="FLIGHT_ID_A" property="flightIdA" jdbcType="VARCHAR" />
    <result column="FLNO_D" property="flnoD" jdbcType="VARCHAR" />
    <result column="FLNO_A" property="flnoA" jdbcType="VARCHAR" />
    <result column="EXEC_DATE_D" property="execDateD" jdbcType="VARCHAR" />
    <result column="EXEC_DATE_A" property="execDateA" jdbcType="VARCHAR" />
    <result column="FL_STATUS" property="flStatus" jdbcType="VARCHAR" />
    <result column="FL_STATUS_A" property="flStatusA" jdbcType="VARCHAR" />
    <result column="AIRLINES" property="airlines" jdbcType="VARCHAR" />
    <result column="FLIGHT_TASK_A" property="flightTaskA" jdbcType="VARCHAR" />
    <result column="FLIGHT_TASK" property="flightTask" jdbcType="VARCHAR" />
    <result column="CRAFT_TYPE_ICAO" property="craftTypeIcao" jdbcType="VARCHAR" />
    <result column="CLASSIFICATION" property="classification" jdbcType="VARCHAR" />
    <result column="REGN" property="regn" jdbcType="VARCHAR" />
    <result column="ADEP_ADES_A" property="adepAdesA" jdbcType="VARCHAR" />
    <result column="ADEP_ADES_D" property="adepAdesD" jdbcType="VARCHAR" />
    <result column="ADEP_D" property="adepD" jdbcType="VARCHAR" />
    <result column="ADES_D" property="adesD" jdbcType="VARCHAR" />
    <result column="ELDT_A_DATE" property="eldtADate" jdbcType="VARCHAR" />
    <result column="ELDT_A_TIME" property="eldtATime" jdbcType="VARCHAR" />
    <result column="ALDT_A_DATE" property="aldtADate" jdbcType="VARCHAR" />
    <result column="ALDT_A_TIME" property="aldtATime" jdbcType="VARCHAR" />
    <result column="ETOT_D_DATE" property="etotDDate" jdbcType="VARCHAR" />
    <result column="ETOT_D_TIME" property="etotDTime" jdbcType="VARCHAR" />
    <result column="ATOT_D_DATE" property="atotDDate" jdbcType="VARCHAR" />
    <result column="ATOT_D_TIME" property="atotDTime" jdbcType="VARCHAR" />
    <result column="ATOT_A_TIME" property="atotATime" jdbcType="VARCHAR" />
    <result column="STAND_A" property="standA" jdbcType="VARCHAR" />
    <result column="STAND_D" property="standD" jdbcType="VARCHAR" />
    <result column="RUNWAY_A" property="runwayA" jdbcType="VARCHAR" />
    <result column="RUNWAY_D" property="runwayD" jdbcType="VARCHAR" />
    <result column="CHANGE_TIME_A" property="changeTimeA" jdbcType="VARCHAR" />
    <result column="CHANGE_TIME_D" property="changeTimeD" jdbcType="VARCHAR" />
    <result column="SIBT" property="sibt" jdbcType="VARCHAR" />
    <result column="SOBT" property="sobt" jdbcType="VARCHAR" />
    <result column="COBT" property="cobt" jdbcType="VARCHAR" />
    <result column="CTOT" property="ctot" jdbcType="VARCHAR" />
    <result column="TTOT" property="ttot" jdbcType="VARCHAR" />
    <result column="TOBT" property="tobt" jdbcType="VARCHAR" />
    <result column="A_TOBT" property="aTobt" jdbcType="VARCHAR" />
    <result column="ISCONTROL" property="iscontrol" jdbcType="VARCHAR" />
    <result column="EIBT" property="eibt" jdbcType="VARCHAR" />
    <result column="AIBT" property="aibt" jdbcType="VARCHAR" />
    <result column="EOBT" property="eobt" jdbcType="VARCHAR" />
    <result column="AOBT" property="aobt" jdbcType="VARCHAR" />
    <result column="ETDO" property="etdo" jdbcType="VARCHAR" />
    <result column="ETDC" property="etdc" jdbcType="VARCHAR" />
    <result column="ATDO" property="atdo" jdbcType="VARCHAR" />
    <result column="ATDC" property="atdc" jdbcType="VARCHAR" />
    <result column="ATDC_STATUS" property="atdcStatus" jdbcType="VARCHAR" />
    <result column="ETFO" property="etfo" jdbcType="VARCHAR" />
    <result column="ETFC" property="etfc" jdbcType="VARCHAR" />
    <result column="ATFO" property="atfo" jdbcType="VARCHAR" />
    <result column="ATFC" property="atfc" jdbcType="VARCHAR" />
    <result column="ESCT" property="esct" jdbcType="VARCHAR" />
    <result column="EFCT" property="efct" jdbcType="VARCHAR" />
    <result column="ASCT" property="asct" jdbcType="VARCHAR" />
    <result column="ASCT_STATUS" property="asctStatus" jdbcType="VARCHAR" />
    <result column="AFCT" property="afct" jdbcType="VARCHAR" />
    <result column="ESC" property="esc" jdbcType="VARCHAR" />
    <result column="EEC" property="eec" jdbcType="VARCHAR" />
    <result column="ASC" property="asc" jdbcType="VARCHAR" />
    <result column="ASC_STATUS" property="ascStatus" jdbcType="VARCHAR" />
    <result column="AEC" property="aec" jdbcType="VARCHAR" />
    <result column="ESR" property="esr" jdbcType="VARCHAR" />
    <result column="EER" property="eer" jdbcType="VARCHAR" />
    <result column="ASR" property="asr" jdbcType="VARCHAR" />
    <result column="ASR_STATUS" property="asrStatus" jdbcType="VARCHAR" />
    <result column="AER" property="aer" jdbcType="VARCHAR" />
    <result column="ESBT" property="esbt" jdbcType="VARCHAR" />
    <result column="EEBT" property="eebt" jdbcType="VARCHAR" />
    <result column="ASBT" property="asbt" jdbcType="VARCHAR" />
    <result column="ASBT_STATUS" property="asbtStatus" jdbcType="VARCHAR" />
    <result column="AEBT" property="aebt" jdbcType="VARCHAR" />
    <result column="AEBT_STATUS" property="aebtStatus" jdbcType="VARCHAR" />
    <result column="ERSL" property="ersl" jdbcType="VARCHAR" />
    <result column="ELSW" property="elsw" jdbcType="VARCHAR" />
    <result column="ARSL" property="arsl" jdbcType="VARCHAR" />
    <result column="ALSW" property="alsw" jdbcType="VARCHAR" />
    <result column="A_GRND_TSF_TM" property="aGrndTsfTm" jdbcType="VARCHAR" />
    <result column="D_GRND_TSF_TM" property="dGrndTsfTm" jdbcType="VARCHAR" />
    <result column="AACT" property="aact" jdbcType="VARCHAR" />
    <result column="TRDT" property="trdt" jdbcType="VARCHAR" />
    <result column="MPBT" property="mpbt" jdbcType="VARCHAR" />
    <result column="MPET" property="mpet" jdbcType="VARCHAR" />
    <result column="ISFOCUS_D" property="isfocusD" jdbcType="VARCHAR" />
    <result column="ISFOCUS_A" property="isfocusA" jdbcType="VARCHAR" />
    <result column="ISDEICING_D" property="isDeicingD" jdbcType="VARCHAR" />
    <result column="REASON_FC" property="reasonFc" jdbcType="VARCHAR" />
    <result column="REASON_TYPE" property="reasonType" jdbcType="VARCHAR" />
    <result column="REASONS_FOR_DELAY" property="reasonsForFelay" jdbcType="VARCHAR" />
    <result column="DELAY_TIME" property="delayTime" jdbcType="VARCHAR" />
    <result column="DELAY_TIME_STATUS" property="delayTimeStatus" jdbcType="VARCHAR" />
    <result column="QFLJ" property="qflj" jdbcType="VARCHAR" />
    <result column="FXLJ" property="fxlj" jdbcType="VARCHAR" />
    <result column="ACDT" property="acdt" jdbcType="VARCHAR" />
    <result column="AEDT" property="aedt" jdbcType="VARCHAR" />
    <result column="DELAY_TIME_D" property="delayTimeD" jdbcType="VARCHAR" />
  </resultMap>


  <resultMap id="ResultMapFlightDetails" type="com.hq.acdm.vo.dynamicFlight.FlightDetailsInfoVo" >
    <result column="FLIGHT_ID_D" property="flightIdD" jdbcType="VARCHAR" />
    <result column="FLIGHT_ID_A" property="flightIdA" jdbcType="VARCHAR" />
    <result column="AIRLINES" property="airlines" jdbcType="VARCHAR" />
    <result column="FLNO_D" property="flnoD" jdbcType="VARCHAR" />
    <result column="FLNO_A" property="flnoA" jdbcType="VARCHAR" />
    <result column="EXEC_DATE_D" property="exec_dateD" jdbcType="VARCHAR" />
    <result column="EXEC_DATE_A" property="exec_dateA" jdbcType="VARCHAR" />
    <result column="FLIGHT_IDENTY_MANAGE_DATE" property="flightIdentyManageDate" jdbcType="VARCHAR" />
    <result column="FLIGHT_TASK" property="flightTask" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE" property="attribute" jdbcType="VARCHAR" />
    <result column="AGENCY" property="agency" jdbcType="VARCHAR" />
    <result column="CRAFT_TYPE_ICAO" property="craftTypeIcao" jdbcType="VARCHAR" />
    <result column="CLASSIFICATION" property="classification" jdbcType="VARCHAR" />
    <result column="REGN" property="regn" jdbcType="VARCHAR" />
    <result column="FL_STATUS" property="flStatus" jdbcType="VARCHAR" />
    <result column="FL_STATUS_A" property="flStatusA" jdbcType="VARCHAR" />
    <result column="SOBT" property="sobt" jdbcType="VARCHAR" />
    <result column="ETOT" property="etot" jdbcType="VARCHAR" />
    <result column="ATOT" property="atot" jdbcType="VARCHAR" />
    <result column="SOBT_A" property="sobtA" jdbcType="VARCHAR" />
    <result column="ETOT_A" property="etotA" jdbcType="VARCHAR" />
    <result column="ATOT_A" property="atotA" jdbcType="VARCHAR" />
    <result column="SIBT" property="sibt" jdbcType="VARCHAR" />
    <result column="ELDT" property="eldt" jdbcType="VARCHAR" />
    <result column="ALDT" property="aldt" jdbcType="VARCHAR" />
    <result column="SIBT_D" property="sibtD" jdbcType="VARCHAR" />
    <result column="ELDT_D" property="eldtD" jdbcType="VARCHAR" />
    <result column="ALDT_D" property="aldtD" jdbcType="VARCHAR" />
    <result column="EIBT" property="eibt" jdbcType="VARCHAR" />
    <result column="AIBT" property="aibt" jdbcType="VARCHAR" />
    <result column="EOBT" property="eobt" jdbcType="VARCHAR" />
    <result column="AOBT" property="aobt" jdbcType="VARCHAR" />
    <result column="SHARE_FLNO" property="shareFlno" jdbcType="VARCHAR" />
    <result column="ADEP_A" property="adepA" jdbcType="VARCHAR" />
    <result column="ADES_A" property="adesA" jdbcType="VARCHAR" />
    <result column="ADEP_D" property="adepD" jdbcType="VARCHAR" />
    <result column="ADES_D" property="adesD" jdbcType="VARCHAR" />
    <result column="START_STATION" property="startStation" jdbcType="VARCHAR" />
    <result column="START_SOBT" property="startSobt" jdbcType="VARCHAR" />
    <result column="START_SIBT" property="startSibt" jdbcType="VARCHAR" />
    <result column="START_EOBT" property="startEobt" jdbcType="VARCHAR" />
    <result column="START_EIBT" property="startEibt" jdbcType="VARCHAR" />
    <result column="START_AOBT" property="startAobt" jdbcType="VARCHAR" />
    <result column="START_AIBT" property="startAibt" jdbcType="VARCHAR" />
    <result column="EXIT" property="exit" jdbcType="VARCHAR" />
    <result column="EXOT" property="exot" jdbcType="VARCHAR" />
    <result column="AXIT" property="axit" jdbcType="VARCHAR" />
    <result column="AXOT" property="axot" jdbcType="VARCHAR" />
    <result column="STAND_A" property="standA" jdbcType="VARCHAR" />
    <result column="STAND_D" property="standD" jdbcType="VARCHAR" />
    <result column="GATE" property="gate" jdbcType="VARCHAR" />
    <result column="CHECK_START_TIME" property="checkStartTime" jdbcType="VARCHAR" />
    <result column="CHECK_END_TIME" property="checkEndTime" jdbcType="VARCHAR" />
    <result column="COBT" property="cobt" jdbcType="VARCHAR" />
    <result column="CTOT" property="ctot" jdbcType="VARCHAR" />
    <result column="TOBT" property="tobt" jdbcType="VARCHAR" />
    <result column="TTOT" property="ttot" jdbcType="VARCHAR" />
    <result column="A_TOBT" property="aTobt" jdbcType="VARCHAR" />
    <result column="DOBT" property="dobt" jdbcType="VARCHAR" />
    <result column="FCT" property="fct" jdbcType="VARCHAR" />
    <result column="RPOT" property="rpot" jdbcType="VARCHAR" />
    <result column="APOT" property="apot" jdbcType="VARCHAR" />
    <result column="ASAT" property="asat" jdbcType="VARCHAR" />
    <result column="RUNWAY_A" property="runwayA" jdbcType="VARCHAR" />
    <result column="RUNWAY_D" property="runwayD" jdbcType="VARCHAR" />
    <result column="ERSL" property="ersl" jdbcType="VARCHAR" />
    <result column="ELSW" property="elsw" jdbcType="VARCHAR" />
    <result column="ARSL" property="arsl" jdbcType="VARCHAR" />
    <result column="ALSW" property="alsw" jdbcType="VARCHAR" />
    <result column="ETDO" property="etdo" jdbcType="VARCHAR" />
    <result column="ETDC" property="etdc" jdbcType="VARCHAR" />
    <result column="ATDO" property="atdo" jdbcType="VARCHAR" />
    <result column="ATDC" property="atdc" jdbcType="VARCHAR" />
    <result column="ETFO" property="etfo" jdbcType="VARCHAR" />
    <result column="ETFC" property="etfc" jdbcType="VARCHAR" />
    <result column="ATFO" property="atfo" jdbcType="VARCHAR" />
    <result column="ATFC" property="atfc" jdbcType="VARCHAR" />
    <result column="ESCT" property="esct" jdbcType="VARCHAR" />
    <result column="EFCT" property="efct" jdbcType="VARCHAR" />
    <result column="ASCT" property="asct" jdbcType="VARCHAR" />
    <result column="AFCT" property="afct" jdbcType="VARCHAR" />
    <result column="ESC" property="esc" jdbcType="VARCHAR" />
    <result column="EEC" property="eec" jdbcType="VARCHAR" />
    <result column="ASC" property="asc" jdbcType="VARCHAR" />
    <result column="AEC" property="aec" jdbcType="VARCHAR" />
    <result column="ESR" property="esr" jdbcType="VARCHAR" />
    <result column="EER" property="eer" jdbcType="VARCHAR" />
    <result column="ASR" property="asr" jdbcType="VARCHAR" />
    <result column="AER" property="aer" jdbcType="VARCHAR" />
    <result column="ESBT" property="esbt" jdbcType="VARCHAR" />
    <result column="EEBT" property="eebt" jdbcType="VARCHAR" />
    <result column="LCBT" property="lcbt" jdbcType="VARCHAR" />
    <result column="ASBT" property="asbt" jdbcType="VARCHAR" />
    <result column="AEBT" property="aebt" jdbcType="VARCHAR" />
    <result column="ECDT" property="ecdt" jdbcType="VARCHAR" />
    <result column="ACDT" property="acdt" jdbcType="VARCHAR" />
    <result column="EEDT" property="eedt" jdbcType="VARCHAR" />
    <result column="AEDT" property="aedt" jdbcType="VARCHAR" />
    <result column="AACT" property="aact" jdbcType="VARCHAR" />
    <result column="A_GRND_TSF_TM" property="aGrndTsfTm" jdbcType="VARCHAR" />
    <result column="D_GRND_TSF_TM" property="dGrndTsfTm" jdbcType="VARCHAR" />
    <result column="TERMINAL" property="terminal" jdbcType="VARCHAR" />
    <result column="BAG_COUNT" property="bagCount" jdbcType="VARCHAR" />
    <result column="BAG_COUNT_A" property="bagCountA" jdbcType="VARCHAR" />
    <result column="BAG_WEIGHT" property="bagWeight" jdbcType="VARCHAR" />
    <result column="BAG_WEIGHT_A" property="bagWeightA" jdbcType="VARCHAR" />
    <result column="PAX_COUNT" property="paxCount" jdbcType="VARCHAR" />
    <result column="CHECK_IN" property="checkIn" jdbcType="VARCHAR" />
    <result column="SECURITY_CHECK" property="securityCheck" jdbcType="VARCHAR" />
    <result column="OVER_STATION" property="overStation" jdbcType="VARCHAR" />
    <result column="BOARDING" property="boarding" jdbcType="VARCHAR" />
    <result column="PLAN_OVER_STAT_TM" property="planOverStatTm" jdbcType="VARCHAR" />
    <result column="USED_TIME" property="usedTime" jdbcType="VARCHAR" />
    <result column="REMAIN_TIME" property="remainTime" jdbcType="VARCHAR" />
    <result column="ISDEICING" property="isdeicing" jdbcType="VARCHAR" />
    <result column="ISFOCUS_A" property="isfocusA" jdbcType="VARCHAR" />
    <result column="ISFOCUS_D" property="isfocusD" jdbcType="VARCHAR" />
    <result column="CARGO_WEIGHT_A" property="cargoWeightA" jdbcType="VARCHAR" />
    <result column="CARGO_WEIGHT_D" property="cargoWeightD" jdbcType="VARCHAR" />
    <result column="MAIL_WEIGHT_A" property="mailWeightA" jdbcType="VARCHAR" />
    <result column="MAIL_WEIGHT_D" property="mailWeightD" jdbcType="VARCHAR" />
    <result column="RESERVATIONS_A" property="reservationsA" jdbcType="VARCHAR" />
    <result column="RESERVATIONS_D" property="reservationsD" jdbcType="VARCHAR" />
    <result column="REASONS_FOR_AUTO" property="reasonsForAuto" jdbcType="VARCHAR" />
  </resultMap>


  <resultMap id="ResultMapFlightDetailsGuest" type="com.hq.acdm.vo.dynamicFlight.FlightDetailsGuestInfoVo" >
    <result column="BAG_COUNT" property="bagCount" jdbcType="VARCHAR" />
    <result column="CHECK_IN" property="checkIn" jdbcType="VARCHAR" />
    <result column="SECURITY_CHECK" property="securityCheck" jdbcType="VARCHAR" />
    <result column="OVER_STATION" property="overStation" jdbcType="VARCHAR" />
    <result column="BOARDING" property="boarding" jdbcType="VARCHAR" />
  </resultMap>


  <resultMap id="ControlInfoResultMap" type="com.hq.acdm.vo.dynamicFlight.TControlInfoVo" >
    <result column="CONTROL_ID" property="controlId" jdbcType="VARCHAR" />
    <result column="CONTROL_CONTENT" property="controlContent" jdbcType="VARCHAR" />
    <result column="CONTROL_ALTERAT_STARTTM" property="controlAlteratStarttm" jdbcType="VARCHAR" />
    <result column="CONTROL_REAL_STARTTM" property="controlRealStarttm" jdbcType="VARCHAR" />
    <result column="CONTROL_ALTERAT_ENDTM" property="controlAlteratEndtm" jdbcType="VARCHAR" />
    <result column="CONTROL_REAL_ENDTM" property="controlRealEndtm" jdbcType="VARCHAR" />
    <result column="CONTROL_POINT" property="controlPoint" jdbcType="VARCHAR" />
  </resultMap>


  <resultMap id="FishboneDiagramResultMap" type="com.hq.acdm.vo.dynamicFlight.FishboneDiagramVo" >
    <result column="NODE_SEQ" property="nodeSeq" jdbcType="VARCHAR" />
    <result column="NODE_NAME" property="nodeName" jdbcType="VARCHAR" />
    <result column="NODE_COLUMN" property="nodeColumn" jdbcType="VARCHAR" />
    <result column="NODE_ESTIMATE_COLUMN" property="nodeEstimateColumn" jdbcType="VARCHAR" />
    <result column="VALUE" property="value" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="FlightEventResultMap" type="com.hq.acdm.vo.dynamicFlight.FlightEventVo" >
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="TIME" property="time" jdbcType="VARCHAR" />
    <result column="DATE" property="date" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
  </resultMap>


  <select id="getFltInfo" resultMap="ResultMap" parameterType="map" >
    <![CDATA[
    SELECT T.FLIGHT_ID_D, -- 离港航班唯一ID
    T.FLIGHT_ID_A, -- 进港航班唯一ID
    T.FLNO_D,-- 出港航班号
    T.FLNO_A,-- 进港航班号
    T.EXEC_DATE_D,-- 出港日期
    T.EXEC_DATE_A,-- 进港日期
    B.CHINESE_NAME AS FL_STATUS,-- 出港航班状态
    BB.CHINESE_NAME AS FL_STATUS_A,-- 进港航班状态
    K.CHINESE_NAME AS FLIGHT_TASK_A,-- 进港航班任务
    KK.CHINESE_NAME AS FLIGHT_TASK,-- 出港航班任务
    T.AIRLINES, -- 航空公司2码
    T.CRAFT_TYPE_ICAO, -- 机型
    E.CLASSIFICATION, -- 机型大类
    T.REGN AS REGN, -- 机号
    -- CONCAT(C.CHINESE_NAME,IF(IFNULL(C.CHINESE_NAME,'')='','','>'),D.CHINESE_NAME,IF(IFNULL(DD.CHINESE_NAME,'')='','','>'),DD.CHINESE_NAME) AS ADEP_ADES, -- 起落机场
    CONCAT(T.ADEP_A,IF(IFNULL(T.ADEP_A,'')='','','>'),T.ADES_A) AS ADEP_ADES_A, -- 进港起落机场
    CONCAT(T.ADEP_D,IF(IFNULL(T.ADEP_D,'')='','','>'),T.ADES_D) AS ADEP_ADES_D, -- 出港起落机场
    T.ADEP_D, -- 出港起飞机场
	T.ADES_D, -- 出港降落机场
    DATE_FORMAT(T.ELDT,'%Y%m%d') AS ELDT_A_DATE, -- 预计落地日期
    DATE_FORMAT(T.ELDT,'%H:%i') AS ELDT_A_TIME,-- 预计落地时间
    DATE_FORMAT(T.ALDT,'%Y%m%d') AS ALDT_A_DATE, -- 实际落地日期
    DATE_FORMAT(T.ALDT,'%H:%i') AS ALDT_A_TIME,-- 实际落地时间
    T.SOBT,-- 计划起飞时间
    T.SIBT,-- 计划落地时间
    DATE_FORMAT(T.ETOT,'%Y%m%d') AS ETOT_D_DATE, -- 预计起飞日期
    DATE_FORMAT(T.ETOT,'%H:%i') AS ETOT_D_TIME,-- 预计起飞时间
    DATE_FORMAT(T.ATOT,'%Y%m%d') AS ATOT_D_DATE, -- 实际起飞日期
    DATE_FORMAT(T.ATOT,'%H:%i') AS ATOT_D_TIME,-- 出港实际起飞时间
    DATE_FORMAT(T.ATOT_A,'%H:%i') AS ATOT_A_TIME, -- 进港实际起飞时间
    T.STAND_A, -- 进港机位
    T.STAND_D, -- 离港机位
    T.RUNWAY_A,-- 进港跑道号
    T.RUNWAY_D,-- 离港跑道号
    T.AXIT AS CHANGE_TIME_A, -- 可变滑入时间
    T.AXOT AS CHANGE_TIME_D, -- 可变滑出时间
    T.COBT,-- 离港计算撤轮档时间COBT
    T.CTOT,-- 离港计算起飞时间CTOT
    T.TTOT,-- 离港目标起飞时间TTOT
    T.TOBT,-- 离港目标撤轮档时间TOBT
    T.A_TOBT,-- 离港机场目标撤轮档时间A_TOBT
    CASE T.ISCONTROL WHEN '0' THEN '否' WHEN '1' THEN '是' ELSE '否' END AS ISCONTROL, -- 是否流控
    T.EIBT, -- 预计上轮档时间EIBT
    T.AIBT, -- 实际上轮档时间AIBT
    T.EOBT, -- 预计撤轮当时间EOBT
    T.AOBT, -- 实际撤轮档时间AOBT
    T.ETDO,-- 预计开客舱门时间ETDO
    T.STDC AS ETDC,-- 预计关客舱门时间ETDC(取计划关客舱门时间)
    DATE_ADD(T.SOBT, INTERVAL 25 MINUTE)  QFLJ,-- 起飞临界
    CASE WHEN T.STDC IS NOT NULL THEN DATE_ADD(T.STDC, INTERVAL 25 MINUTE) ELSE NULL END AS FXLJ,-- 放行临界
    T.ATDO,-- 实际开客舱门时间ATDO
    T.ATDC,-- 实际关客舱门时间ATDC
    CASE WHEN T.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.STDC) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.STDC) <= 15 THEN 1
    WHEN T.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,T.STDC,NOW()) >= 0 THEN 2
    WHEN T.ATDC IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.STDC,T.ATDC) > 0 THEN 3 ELSE 0 END AS ATDC_STATUS,-- 关客舱门状态
    T.ETFO,-- 预计开货舱门时间ETFO
    T.ETFC,-- 预计关货舱门时间ETFC
    T.ATFO,-- 实际开货舱门时间 ATFO
    T.ATFC,-- 实际关货舱门时间ATFC
    T.ESCT, -- 预计保洁开始时间ESCT
    T.EFCT,-- 预计保洁结束时间EFCT
    T.ASCT, -- 实际保洁开始时间ASCT
    CASE WHEN T.ASCT IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESCT) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESCT) <= 15 THEN 1
    WHEN T.ASCT IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESCT,NOW()) >= 0 THEN 2
    WHEN T.ASCT IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESCT,T.ASCT) > 0 THEN 3 ELSE 0 END AS ASCT_STATUS,-- 保洁开始时间状态
    T.AFCT,-- 实际保洁结束时间AFCT
    T.ACDT,	-- 实际开始除冰时间ACDT
    T.AEDT,	-- 实际结束除冰时间AEDT
    T.ESC, -- 预计开始配餐时间ESC
    T.EEC,-- 预计完成配餐时间EEC
    T.`ASC`, -- 实际开始配餐时间ASC
	CASE WHEN T.`ASC` IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESC) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESC) <= 15 THEN 1
    WHEN T.`ASC` IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESC,NOW()) >= 0 THEN 2
    WHEN T.`ASC` IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESC,T.`ASC`) > 0 THEN 3 ELSE 0 END AS ASC_STATUS,-- 开始配餐时间状态
    T.AEC,-- 实际完成配餐时间AEC
    T.ESR, -- 预计开始供油时间ESR
    T.EER,-- 预计完成供油时间EER
    T.ASR, -- 实际开始供油时间ASR
	CASE WHEN T.ASR IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESR) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESR) <= 15 THEN 1
    WHEN T.ASR IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESR,NOW()) >= 0 THEN 2
    WHEN T.ASR IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESR,T.ASR) > 0 THEN 3 ELSE 0 END AS ASR_STATUS,-- 开始供油时间状态
    T.AER,-- 实际完成供油时间AER
    T.ESBT, -- 预计开始登机时间ESBT
    T.EEBT,-- 预计完成登机时间EEBT
    T.ASBT, -- 实际开始登机时间ASBT
	CASE WHEN T.ASBT IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESBT) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESBT) <= 15 THEN 1
    WHEN T.ASBT IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESBT,NOW()) >= 0 THEN 2
    WHEN T.ASBT IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESBT,T.ASBT) > 0 THEN 3 ELSE 0 END AS ASBT_STATUS,-- 开始登机时间状态
    T.AEBT,-- 实际完成登机时间AEBT
    CASE WHEN T.ATOT IS NULL AND T.AEBT IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.AEBT,NOW()) > 30 THEN 3 ELSE 0 END AS AEBT_STATUS,-- 完成登机时间状态
    T.ERSL,-- 预计靠桥时间（客梯或桥）ERSL
    T.ELSW,-- 预计离桥时间/撤客梯车时间ELSW
    T.ARSL,-- 实际靠桥时间（客梯或桥）ARSL
    T.ALSW,-- 实际离桥时间/撤客梯车时间ALSW
    T.A_GRND_TSF_TM, -- 进港地面移交时间
    T.D_GRND_TSF_TM, -- 离港地面移交时间
    T.AACT, -- 机务放行时间
    T.TRDT, -- 牵引时间时间
    T.MPBT, -- 下机开始时间
    T.MPET, -- 下机结束时间
    T.ISFOCUS_D, -- 出港航班是否关注
	T.ISFOCUS_A, -- 进港航班是否关注
	IFNULL(T.ISDEICING_D,0) ISDEICING_D, -- 是否除冰航班
    T.REASON_FC, -- 原因反馈单位
	T.REASON_TYPE, -- 原因类型
	R.CHINESE_NAME AS REASONS_FOR_DELAY, -- 延误原因
	T.DELAY_TIME_D AS DELAY_TIME_D, -- 起飞延误
    CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END AS DELAY_TIME, -- 延误时长
    CASE WHEN (CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END) >= 60 THEN 3 WHEN ((CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END) > 0 AND (CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END) < 60) THEN 2 ELSE 0 END DELAY_TIME_STATUS,	-- 延误时长状态
    CASE WHEN (T.ALDT IS NOT NULL OR T.FLIGHT_ID_A IS NULL) THEN 3 ELSE 0 END AS PAIXU
    FROM V_UTIL_UNITE_FLIGHT T
    LEFT JOIN T_FLIGHT_STATUS B ON T.FL_STATUS = B.`CODE`
    LEFT JOIN T_FLIGHT_STATUS BB ON T.FL_STATUS_A = BB.`CODE`
    LEFT JOIN T_CRAFT_TYPE E ON E.ICAO_CD = T.CRAFT_TYPE_ICAO
    LEFT JOIN T_ABNORMAL_REASON R ON T.REASONS_FOR_DELAY = R.CODE
    LEFT JOIN T_FLIGHT_TASK K ON K.`CODE` = T.FLIGHT_TASK_A
    LEFT JOIN T_FLIGHT_TASK KK ON KK.`CODE` = T.FLIGHT_TASK
    -- LEFT JOIN T_AIRPORT C ON T.ADEP_A = C.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT D ON T.ADES_A = D.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT DD ON T.ADES_D = DD.AIRPORT_IATA
    WHERE
    -- (T.FL_STATUS <> 'CAN' OR T.FL_STATUS IS NULL) AND (T.FL_STATUS_A <> 'CAN' OR T.FL_STATUS_A IS NULL)
    ]]>
    <if test="params.cancel !=null and params.cancel == 1">
      (T.FL_STATUS = 'CAN' OR T.FL_STATUS_A = 'CAN')
    </if>
    <if test="params.cancel ==null or params.cancel == 0">
      <![CDATA[(T.FL_STATUS <> 'CAN' OR T.FL_STATUS IS NULL) AND (T.FL_STATUS_A <> 'CAN' OR T.FL_STATUS_A IS NULL)]]>
    </if>
    <if test="params.startTime !=null and params.startTime != '' and params.endTime !=null and params.endTime != '' ">
     AND T.SOBT BETWEEN #{params.startTime,jdbcType=VARCHAR} AND #{params.endTime,jdbcType=VARCHAR}
    </if>
    <if test="params.flno !=null and params.flno != ''">
      AND (T.FLNO_D LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%') OR T.FLNO_A LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%'))
    </if>
    <if test="params.airlines !=null and params.airlines != ''">
      AND T.AIRLINES = #{params.airlines,jdbcType=VARCHAR}
    </if>
    <if test="params.appExecDate !=null and params.appExecDate != ''">
      AND (T.EXEC_DATE_D = #{params.appExecDate,jdbcType=VARCHAR}
      OR T.EXEC_DATE_A = #{params.appExecDate,jdbcType=VARCHAR})
    </if>
    <if test="params.notRun !=null and params.notRun == 1">
      AND T.ATOT IS NULL
    </if>
    <if test="params.agent !=null and params.agent == 'GH'">
      AND T.AIRLINES IN ('CA','ZH')
    </if>
    <if test="params.agent !=null and params.agent == 'NH'">
      AND T.AIRLINES IN ('CZ','OQ')
    </if>
    <if test="params.agent !=null and params.agent == 'DH'">
      AND T.AIRLINES IN ('FM','MU')
    </if>
    <if test="params.agent !=null and params.agent == 'HY'">
      AND T.AIRLINES IN ('UW','O3','CF','OZ','Y8')
    </if>
    <if test="params.agent !=null and params.agent == 'DF'">
      AND T.AIRLINES NOT IN ('CA','ZH','CZ','OQ','FM','MU','UW','O3','CF','OZ','Y8','XX') AND T.FLIGHT_TASK IN ('W/Z','C/B','L/W')
    </if>
    <if test="params.delay !=null and params.delay == 1">
      <![CDATA[
      -- AND T.FL_STATUS = 'DLY'
      -- AND (T.FL_STATUS = 'DLY' OR T.FL_STATUS_A = 'DLY')
      AND ((CASE WHEN T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
      WHEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
      THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
      ELSE 0 END) > 0
      AND T.FLIGHT_TASK IN ('W/Z','C/B','L/W')
      AND T.EXEC_DATE_D = CURRENT_DATE
      AND T.ATOT IS NOT NULL)
      ]]>
    </if>
    <if test="params.indexYW !=null and params.indexYW == 1">
      <![CDATA[
      AND (T.FLIGHT_TASK IN ('W/Z','C/B','L/W') AND T.ATOT IS NOT NULL AND T.DELAY_TIME_D > 0)
      ]]>
    </if>
    <if test="params.altA !=null and params.altA == 1">
      AND (T.FLIGHT_TASK IN ('W/Z','C/B','L/W') AND T.FL_STATUS_A = 'ALT')
    </if>
    <if test="params.altD !=null and params.altD == 1">
      AND (T.FLIGHT_TASK IN ('W/Z','C/B','L/W') AND T.FL_STATUS = 'ALT')
    </if>
    <if test="params.rtnA !=null and params.rtnA == 1">
      AND (T.FLIGHT_TASK IN ('W/Z','C/B','L/W') AND T.FL_STATUS_A = 'RTN')
    </if>
    <if test="params.rtnD !=null and params.rtnD == 1">
      AND (T.FLIGHT_TASK IN ('W/Z','C/B','L/W') AND T.FL_STATUS = 'RTN')
    </if>
    <if test="params.agent == null or params.agent == ''" >
      <if test="params.agentSys !=null and params.agentSys != ''">
        <choose>
          <when test="params.dept !=null and params.dept == 'IGO'">
            AND T.AIRLINES NOT IN (${params.agentSys})
          </when>
          <otherwise>
            AND T.AIRLINES IN (${params.agentSys})
          </otherwise>
        </choose>
      </if>
    </if>
    ORDER BY PAIXU DESC, T.SOBT ASC
  </select>


  <select id="findDelayFltInfo" resultMap="ResultMap" parameterType="map" >
    <![CDATA[
    SELECT T.FLIGHT_ID_D, -- 离港航班唯一ID
    T.FLIGHT_ID_A, -- 进港航班唯一ID
    T.FLNO_D,-- 出港航班号
    T.FLNO_A,-- 进港航班号
    T.EXEC_DATE_D,-- 出港日期
    T.EXEC_DATE_A,-- 进港日期
    B.CHINESE_NAME AS FL_STATUS,-- 出港航班状态
    BB.CHINESE_NAME AS FL_STATUS_A,-- 进港航班状态
    K.CHINESE_NAME AS FLIGHT_TASK_A,-- 进港航班任务
    KK.CHINESE_NAME AS FLIGHT_TASK,-- 出港航班任务
    T.AIRLINES, -- 航空公司2码
    T.CRAFT_TYPE_ICAO, -- 机型
    E.CLASSIFICATION, -- 机型大类
    T.REGN AS REGN, -- 机号
    -- CONCAT(C.CHINESE_NAME,IF(IFNULL(C.CHINESE_NAME,'')='','','>'),D.CHINESE_NAME,IF(IFNULL(DD.CHINESE_NAME,'')='','','>'),DD.CHINESE_NAME) AS ADEP_ADES, -- 起落机场
    CONCAT(T.ADEP_A,IF(IFNULL(T.ADEP_A,'')='','','>'),T.ADES_A) AS ADEP_ADES_A, -- 进港起落机场
    CONCAT(T.ADEP_D,IF(IFNULL(T.ADEP_D,'')='','','>'),T.ADES_D) AS ADEP_ADES_D, -- 出港起落机场
    T.ADEP_D, -- 出港起飞机场
	T.ADES_D, -- 出港降落机场
    DATE_FORMAT(T.ELDT,'%Y%m%d') AS ELDT_A_DATE, -- 预计落地日期
    DATE_FORMAT(T.ELDT,'%H:%i') AS ELDT_A_TIME,-- 预计落地时间
    DATE_FORMAT(T.ALDT,'%Y%m%d') AS ALDT_A_DATE, -- 实际落地日期
    DATE_FORMAT(T.ALDT,'%H:%i') AS ALDT_A_TIME,-- 实际落地时间
    T.SOBT,-- 计划起飞时间
    T.SIBT,-- 计划落地时间
    DATE_FORMAT(T.ETOT,'%Y%m%d') AS ETOT_D_DATE, -- 预计起飞日期
    DATE_FORMAT(T.ETOT,'%H:%i') AS ETOT_D_TIME,-- 预计起飞时间
    DATE_FORMAT(T.ATOT,'%Y%m%d') AS ATOT_D_DATE, -- 实际起飞日期
    DATE_FORMAT(T.ATOT,'%H:%i') AS ATOT_D_TIME,-- 出港实际起飞时间
    DATE_FORMAT(T.ATOT_A,'%H:%i') AS ATOT_A_TIME, -- 进港实际起飞时间
    T.STAND_A, -- 进港机位
    T.STAND_D, -- 离港机位
    T.RUNWAY_A,-- 进港跑道号
    T.RUNWAY_D,-- 离港跑道号
    T.AXIT AS CHANGE_TIME_A, -- 可变滑入时间
    T.AXOT AS CHANGE_TIME_D, -- 可变滑出时间
    T.COBT,-- 离港计算撤轮档时间COBT
    T.CTOT,-- 离港计算起飞时间CTOT
    T.TTOT,-- 离港目标起飞时间TTOT
    T.TOBT,-- 离港目标撤轮档时间TOBT
    T.A_TOBT,-- 离港机场目标撤轮档时间A_TOBT
    CASE T.ISCONTROL WHEN '0' THEN '否' WHEN '1' THEN '是' ELSE '否' END AS ISCONTROL, -- 是否流控
    T.EIBT, -- 预计上轮档时间EIBT
    T.AIBT, -- 实际上轮档时间AIBT
    T.EOBT, -- 预计撤轮当时间EOBT
    T.AOBT, -- 实际撤轮档时间AOBT
    T.ETDO,-- 预计开客舱门时间ETDO
    T.STDC AS ETDC,-- 预计关客舱门时间ETDC(取计划关客舱门时间)
    CASE WHEN T.STDC IS NOT NULL THEN DATE_ADD(T.STDC, INTERVAL 25 MINUTE) ELSE NULL END AS FXLJ,-- 放行临界
    T.ATDO,-- 实际开客舱门时间ATDO
    T.ATDC,-- 实际关客舱门时间ATDC
    CASE WHEN T.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.STDC) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.STDC) <= 15 THEN 1
    WHEN T.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,T.STDC,NOW()) >= 0 THEN 2
    WHEN T.ATDC IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.STDC,T.ATDC) > 0 THEN 3 ELSE 0 END AS ATDC_STATUS,-- 关客舱门状态
    T.ETFO,-- 预计开货舱门时间ETFO
    T.ETFC,-- 预计关货舱门时间ETFC
    T.ATFO,-- 实际开货舱门时间 ATFO
    T.ATFC,-- 实际关货舱门时间ATFC
    T.ESCT, -- 预计保洁开始时间ESCT
    T.EFCT,-- 预计保洁结束时间EFCT
    T.ASCT, -- 实际保洁开始时间ASCT
    CASE WHEN T.ASCT IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESCT) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESCT) <= 15 THEN 1
    WHEN T.ASCT IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESCT,NOW()) >= 0 THEN 2
    WHEN T.ASCT IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESCT,T.ASCT) > 0 THEN 3 ELSE 0 END AS ASCT_STATUS,-- 保洁开始时间状态
    T.AFCT,-- 实际保洁结束时间AFCT
    T.ACDT,	-- 实际开始除冰时间ACDT
    T.AEDT,	-- 实际结束除冰时间AEDT
    T.ESC, -- 预计开始配餐时间ESC
    T.EEC,-- 预计完成配餐时间EEC
    T.`ASC`, -- 实际开始配餐时间ASC
	CASE WHEN T.`ASC` IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESC) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESC) <= 15 THEN 1
    WHEN T.`ASC` IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESC,NOW()) >= 0 THEN 2
    WHEN T.`ASC` IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESC,T.`ASC`) > 0 THEN 3 ELSE 0 END AS ASC_STATUS,-- 开始配餐时间状态
    T.AEC,-- 实际完成配餐时间AEC
    T.ESR, -- 预计开始供油时间ESR
    T.EER,-- 预计完成供油时间EER
    T.ASR, -- 实际开始供油时间ASR
	CASE WHEN T.ASR IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESR) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESR) <= 15 THEN 1
    WHEN T.ASR IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESR,NOW()) >= 0 THEN 2
    WHEN T.ASR IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESR,T.ASR) > 0 THEN 3 ELSE 0 END AS ASR_STATUS,-- 开始供油时间状态
    T.AER,-- 实际完成供油时间AER
    T.ESBT, -- 预计开始登机时间ESBT
    T.EEBT,-- 预计完成登机时间EEBT
    T.ASBT, -- 实际开始登机时间ASBT
	CASE WHEN T.ASBT IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESBT) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),T.ESBT) <= 15 THEN 1
    WHEN T.ASBT IS NULL AND TIMESTAMPDIFF(MINUTE,T.ESBT,NOW()) >= 0 THEN 2
    WHEN T.ASBT IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.ESBT,T.ASBT) > 0 THEN 3 ELSE 0 END AS ASBT_STATUS,-- 开始登机时间状态
    T.AEBT,-- 实际完成登机时间AEBT
    CASE WHEN T.ATOT IS NULL AND T.AEBT IS NOT NULL AND TIMESTAMPDIFF(MINUTE,T.AEBT,NOW()) > 30 THEN 3 ELSE 0 END AS AEBT_STATUS,-- 完成登机时间状态
    T.ERSL,-- 预计靠桥时间（客梯或桥）ERSL
    T.ELSW,-- 预计离桥时间/撤客梯车时间ELSW
    T.ARSL,-- 实际靠桥时间（客梯或桥）ARSL
    T.ALSW,-- 实际离桥时间/撤客梯车时间ALSW
    T.A_GRND_TSF_TM, -- 进港地面移交时间
    T.D_GRND_TSF_TM, -- 离港地面移交时间
    T.AACT, -- 机务放行时间
    T.TRDT, -- 牵引时间时间
    T.MPBT, -- 下机开始时间
    T.MPET, -- 下机结束时间
    T.ISFOCUS_D, -- 出港航班是否关注
	T.ISFOCUS_A, -- 进港航班是否关注
	IFNULL(T.ISDEICING_D,0) ISDEICING_D, -- 是否除冰航班
    T.REASON_FC, -- 原因反馈单位
	T.REASON_TYPE, -- 原因类型
	R.CHINESE_NAME AS REASONS_FOR_DELAY, -- 延误原因
    CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END AS DELAY_TIME, -- 延误时长
    CASE WHEN (CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END) >= 60 THEN 3 WHEN ((CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END) > 0 AND (CASE WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND T.FLIGHT_ID_A IS NULL THEN T.DELAY_TIME_D
    WHEN T.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y') AND (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0) > 0)
    THEN (IFNULL(T.DELAY_TIME_D,0) - IFNULL(T.DELAY_TIME_A,0))
    ELSE 0 END) < 60) THEN 2 ELSE 0 END DELAY_TIME_STATUS,	-- 延误时长状态
    CASE WHEN (T.ALDT IS NOT NULL OR T.FLIGHT_ID_A IS NULL) THEN 3 ELSE 0 END AS PAIXU
    FROM V_UTIL_UNITE_FLIGHT T
    LEFT JOIN T_FLIGHT_STATUS B ON T.FL_STATUS = B.`CODE`
    LEFT JOIN T_FLIGHT_STATUS BB ON T.FL_STATUS_A = BB.`CODE`
    LEFT JOIN T_CRAFT_TYPE E ON E.ICAO_CD = T.CRAFT_TYPE_ICAO
    LEFT JOIN T_ABNORMAL_REASON R ON T.REASONS_FOR_DELAY = R.CODE
    LEFT JOIN T_FLIGHT_TASK K ON K.`CODE` = T.FLIGHT_TASK_A
    LEFT JOIN T_FLIGHT_TASK KK ON KK.`CODE` = T.FLIGHT_TASK
    -- LEFT JOIN T_AIRPORT C ON T.ADEP_A = C.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT D ON T.ADES_A = D.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT DD ON T.ADES_D = DD.AIRPORT_IATA
    WHERE (T.FL_STATUS <> 'CAN' OR T.FL_STATUS IS NULL) AND (T.FL_STATUS_A <> 'CAN' OR T.FL_STATUS_A IS NULL)
    ]]>
    <if test="params.startTime !=null and params.startTime != '' and params.endTime !=null and params.endTime != '' ">
      AND T.SOBT BETWEEN #{params.startTime,jdbcType=VARCHAR} AND #{params.endTime,jdbcType=VARCHAR}
    </if>
    <if test="params.flno !=null and params.flno != ''">
      AND (T.FLNO_D LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%') OR T.FLNO_A LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%'))
    </if>
    <if test="params.airlines !=null and params.airlines != ''">
      AND T.AIRLINES = #{params.airlines,jdbcType=VARCHAR}
    </if>
    <if test="params.appExecDate !=null and params.appExecDate != ''">
      AND (T.EXEC_DATE_D = #{params.appExecDate,jdbcType=VARCHAR}
      OR T.EXEC_DATE_A = #{params.appExecDate,jdbcType=VARCHAR})
    </if>
    <if test="params.notRun !=null and params.notRun == 1">
      AND T.ATOT IS NULL
    </if>
    <if test="params.agent !=null and params.agent == 'GH'">
      AND T.AIRLINES IN ('CA','ZH')
    </if>
    <if test="params.agent !=null and params.agent == 'NH'">
      AND T.AIRLINES IN ('CZ','OQ')
    </if>
    <if test="params.agent !=null and params.agent == 'DH'">
      AND T.AIRLINES IN ('FM','MU')
    </if>
    <if test="params.agent !=null and params.agent == 'HY'">
      AND T.AIRLINES IN ('UW','O3','CF','OZ','Y8')
    </if>
    <if test="params.agent !=null and params.agent == 'DF'">
      AND T.AIRLINES NOT IN ('CA','ZH','CZ','OQ','FM','MU','UW','O3','CF','OZ','Y8')
    </if>
    <if test="params.delay !=null and params.delay == 1">
      <![CDATA[
      AND T.DELAY_TIME_D > 0
      ]]>
    </if>
    <if test="params.agent == null or params.agent == ''" >
      <if test="params.agentSys !=null and params.agentSys != ''">
        <choose>
          <when test="params.dept !=null and params.dept == 'IGO'">
            AND T.AIRLINES NOT IN (${params.agentSys})
          </when>
          <otherwise>
            AND T.AIRLINES IN (${params.agentSys})
          </otherwise>
        </choose>
      </if>
    </if>
    ORDER BY PAIXU DESC, T.SOBT ASC
  </select>

  <select id="findAllCompany" resultType="string"  >
    SELECT DISTINCT AIRLINES FROM T_LOCAL_FLIGHT_INFO
    WHERE SUBSTRING(SUBSTRING_INDEX(SUBSTRING_INDEX(FFID,'-',-2),'-',1),1,8) = DATE_FORMAT(CURRENT_DATE,'%Y%m%d')
    AND AIRLINES IS NOT NULL
    ORDER BY AIRLINES ASC
  </select>

  <select id="findAllControlInfo" resultMap="ControlInfoResultMap" parameterType="map" >
    SELECT A.CONTROL_ID,A.CONTROL_CONTENT,A.CONTROL_ALTERAT_STARTTM,A.CONTROL_REAL_STARTTM,
    A.CONTROL_ALTERAT_ENDTM,A.CONTROL_REAL_ENDTM,A.CONTROL_POINT
    FROM T_CONTROL_INFO A
    LEFT JOIN T_CONTROL_MAP B ON A.CONTROL_ID = B.CONTROL_ID
    LEFT JOIN T_ATC_FLIGHT_INFO C ON C.FUID = B.FUID
    WHERE C.FLIGHTID = #{params.flightId,jdbcType=BIGINT}

    <!--
    <choose>
      <when test="params.flightIdD != null">
        AND B.FLIGHT_ID = #{params.flightIdD,jdbcType=BIGINT}
      </when>
      <otherwise>
        AND B.FLIGHT_ID = #{params.flightIdA,jdbcType=BIGINT}
      </otherwise>
    </choose>
    -->
  </select>


  <select id="findFlightDetails" resultMap="ResultMapFlightDetails" parameterType="map" >
    SELECT T.FLIGHT_ID_D, -- 离港航班唯一ID
    T.FLIGHT_ID_A, -- 进港航班唯一ID
    T.AIRLINES, -- 航空公司2码
    T.FLNO_D,-- 出港航班号
    T.FLNO_A,-- 进港航班号
    T.EXEC_DATE_D,-- 出港执行日期时间（根据本次的信息）
    T.EXEC_DATE_A,-- 进港执行日期时间（根据本次的信息）
    T.FLIGHT_IDENTY_MANAGE_DATE,-- 起飞时间的DATE
    T.FLIGHT_TASK,-- 航班任务
    T.ATTRIBUTE,-- 航班属性
    T.AGENCY, -- 航班代理
    T.CRAFT_TYPE_ICAO, -- 机型
    E.CLASSIFICATION, -- 机型大类
    T.REGN AS REGN, -- 机号
    T.FL_STATUS,-- 出港航班状态
    T.FL_STATUS_A, -- 进港航班状态
    T.SOBT,-- 出港计划起飞时间
    T.ETOT,-- 出港预计起飞时间
    T.ATOT,-- 出港实际起飞时间
    T.SOBT_A,-- 进港计划起飞时间
    T.ETOT_A,-- 进港预计起飞时间
    T.ATOT_A,-- 进港实际起飞时间
    T.SIBT,-- 进港计划落地时间
    T.ELDT,-- 进港预计落地时间
    T.ALDT,-- 进港实际落地时间
    T.SIBT_D,-- 出港计划落地时间
    T.ELDT_D,-- 出港预计落地时间
    T.ALDT_D,-- 出港实际落地时间
    T.EIBT, -- 预计上轮档时间EIBT
    T.AIBT, -- 实际上轮档时间AIBT
    T.EOBT, -- 预计撤轮当时间EOBT
    T.AOBT, -- 实际撤轮档时间AOBT
    T.SHARE_FLNO, -- 共享航班号 多个,分隔
    T.ADEP_A,-- 进港起飞机场
    T.ADES_A,-- 进港落地机场
    T.ADEP_D,-- 离港起飞机场
    T.ADES_D,-- 离港落地机场
    T.START_STATION, -- 航班起始站
    T.START_SOBT,-- 起始站计划起飞时间
    T.START_SIBT,-- 起始站计划落地时间
    T.START_EOBT,-- 起始站预计撤轮当时间
    T.START_EIBT,-- 起始站预计上轮当时间
    T.START_AOBT,-- 起始站实际撤轮当时间
    T.START_AIBT,-- 起始站实际上轮当时间
    T.`EXIT`, -- 预计滑入时长
    T.EXOT, -- 预计滑出时长
    T.AXIT, -- 实际滑入时长
    T.AXOT, -- 实际滑出时长
    T.STAND_A, -- 进港机位
    T.STAND_D, -- 离港机位
    T.GATE, -- 登机门
    T.CHECK_START_TIME, -- 开始值机时间
    T.CHECK_END_TIME,-- 结束值机时间
    T.COBT,-- 离港计算撤轮档时间COBT
    T.CTOT,-- 离港计算起飞时间CTOT
    T.TOBT,-- 离港目标撤轮档时间TOBT
    T.TTOT,-- 离港目标起飞时间TTOT
    T.A_TOBT,-- 离港机场目标撤轮档时间A_TOBT
    T.DOBT,-- 离港机场协调撤轮档时间DOBT
    T.FCT,	-- 首次联系时间
    T.RPOT,	-- 请求推出时间
    T.APOT,	-- 实际推出时间
    T.ASAT,	-- 实际开车时间
    T.RUNWAY_A,-- 进港跑道号
    T.RUNWAY_D,-- 离港跑道号
    T.ERSL,-- 预计靠桥时间（客梯或桥）ERSL
    T.ELSW,-- 预计离桥时间/撤客梯车时间ELSW
    T.ARSL,-- 实际靠桥时间（客梯或桥）ARSL
    T.ALSW,-- 实际离桥时间/撤客梯车时间ALSW
    T.ETDO,-- 预计开客舱门时间ETDO
    T.ETDC,-- 预计关客舱门时间ETDC
    T.ATDO,-- 实际开客舱门时间ATDO
    T.ATDC,-- 实际关客舱门时间ATDC
    T.ETFO,-- 预计开货舱门时间ETFO
    T.ETFC,-- 预计关货舱门时间ETFC
    T.ATFO,-- 实际开货舱门时间 ATFO
    T.ATFC,-- 实际关货舱门时间ATFC
    T.ESCT, -- 预计保洁开始时间ESCT
    T.EFCT,-- 预计保洁结束时间EFCT
    T.ASCT, -- 实际保洁开始时间ASCT
    T.AFCT,-- 实际保洁结束时间AFCT
    T.ESC, -- 预计开始配餐时间ESC
    T.EEC,-- 预计完成配餐时间EEC
    T.`ASC`, -- 实际开始配餐时间ASC
    T.AEC,-- 实际完成配餐时间AEC
    T.ESR, -- 预计开始供油时间ESR
    T.EER,-- 预计完成供油时间EER
    T.ASR, -- 实际开始供油时间ASR
    T.AER,-- 实际完成供油时间AER
    T.ESBT, -- 预计开始登机时间ESBT
    T.EEBT,-- 预计完成登机时间EEBT
    T.LCBT,-- 催促登机时间LCBT
    T.ASBT, -- 实际开始登机时间ASBT
    T.AEBT,-- 实际完成登机时间AEBT
    T.ECDT,	-- 预计开始除冰时间ECDT
    T.ACDT,	-- 实际开始除冰时间ACDT
    T.EEDT,	-- 预计结束除冰时间EEDT
    T.AEDT,	-- 实际结束除冰时间AEDT
    T.AACT,	-- 机务放行时间AACT
    T.A_GRND_TSF_TM, -- 进港地面移交时间
    T.D_GRND_TSF_TM, -- 离港地面移交时间
    T.TERMINAL,-- 航站楼编号
    T.BAG_COUNT,-- 行李件数
    T.BAG_COUNT_A,-- 进港行李件数
    T.BAG_WEIGHT,-- 出港行李总重量（kg）
    T.BAG_WEIGHT_A,-- 进港行李总重量（kg）
    T.PAX_COUNT, -- 旅客人数
    T.ISDEICING, -- 是否除冰
    T.ISFOCUS_A, -- 进港是否关注
    T.ISFOCUS_D, -- 出港是否关注
    T.CARGO_WEIGHT_A,-- 进港货物重量（kg）
    T.CARGO_WEIGHT_D,-- 出港货物重量（kg）
    T.MAIL_WEIGHT_A,-- 进港邮件重量（kg）
    T.MAIL_WEIGHT_D,-- 出港邮件重量（kg）
    T.RESERVATIONS_A,-- 进港订座人数
    T.RESERVATIONS_D,-- 出港订座人数
    T.REASONS_FOR_AUTO,-- 自动分析延误原因
    -- TIMESTAMPDIFF(MINUTE,T.SIBT,T.SOBT) AS PLAN_OVER_STAT_TM,-- 计划过站时长
    -- CASE WHEN T.AIBT IS NOT NULL THEN TIMESTAMPDIFF(MINUTE,T.AIBT,NOW()) ELSE NULL END AS USED_TIME,-- 已用时长
    -- CASE WHEN T.AIBT IS NOT NULL THEN ((TIMESTAMPDIFF(MINUTE,T.SIBT,T.SOBT)) - TIMESTAMPDIFF(MINUTE,T.AIBT,NOW())) ELSE NULL END AS REMAIN_TIME -- 剩余时长
    -- DATE_ADD(T.SOBT,INTERVAL DELAY_TIME_A MINUTE) AS PLAN_OVER_STAT_TM,-- 延误临界
    CASE WHEN T.STDC IS NOT NULL THEN DATE_ADD(T.STDC, INTERVAL 25 MINUTE) ELSE NULL END AS PLAN_OVER_STAT_TM,-- 延误临界 放行临界
    '' AS USED_TIME,-- 已用时长
    CASE WHEN T.ALDT IS NOT NULL AND T.ATOT IS NULL THEN TIMESTAMPDIFF(MINUTE,NOW(),CASE WHEN T.STDC IS NOT NULL THEN DATE_ADD(T.STDC, INTERVAL 25 MINUTE) ELSE NULL END)
    WHEN T.ALDT IS NOT NULL AND T.ATOT IS NOT NULL THEN TIMESTAMPDIFF(MINUTE,T.ATOT,CASE WHEN T.STDC IS NOT NULL THEN DATE_ADD(T.STDC, INTERVAL 25 MINUTE) ELSE NULL END)
    ELSE NULL END AS REMAIN_TIME -- 剩余时长
    FROM V_UTIL_UNITE_FLIGHT T
    LEFT JOIN T_CRAFT_TYPE E ON E.ICAO_CD = T.CRAFT_TYPE_ICAO
    WHERE (T.FL_STATUS <![CDATA[<>]]> 'CAN' OR T.FL_STATUS IS NULL) AND (T.FL_STATUS_A <![CDATA[<>]]> 'CAN' OR T.FL_STATUS_A IS NULL)
    AND (T.FLIGHT_ID_D = ${params.flightId} OR T.FLIGHT_ID_A = ${params.flightId})
    <!--
    <choose>
      <when test="params.flightIdD != null">
        AND T.FLIGHT_ID_D = #{params.flightIdD,jdbcType=BIGINT}
      </when>
      <otherwise>
        AND T.FLIGHT_ID_A = #{params.flightIdA,jdbcType=BIGINT}
      </otherwise>
    </choose>
    -->
  </select>


  <select id="findFlightPassenger" resultMap="ResultMapFlightDetailsGuest" parameterType="map" >
    <!--
    SELECT SUM(dpsrBagCount) BAG_COUNT,
    SUM(CASE WHEN BB.dpsrCheckinTime IS NOT NULL AND BB.stsPscTime IS NULL AND BB.stsBoardTime IS NULL THEN 1 ELSE 0 END) CHECK_IN,
    SUM(CASE WHEN BB.dpsrCheckinTime IS NOT NULL AND BB.stsPscTime IS NOT NULL AND BB.stsBoardTime IS NULL THEN 1 ELSE 0 END) SECURITY_CHECK,
    SUM(CASE WHEN BB.dpsrCheckinTime IS NOT NULL AND BB.stsBoardTime IS NOT NULL THEN 1 ELSE 0 END) BOARDING
    FROM T_PASSENGER_INFO BB
    WHERE BB.flightId = #{params.flightId,jdbcType=BIGINT}
    -->
    <!--
    SELECT SUM(BB.dpsrBagCount) BAG_COUNT,
    SUM(CASE WHEN BB.stsBoardTime IS NOT NULL AND BB.stsPscIsPass = 2 THEN 1 ELSE 0 END) OVER_STATION,
    SUM(CASE WHEN BB.dpsrCheckinTime IS NOT NULL THEN 1 ELSE 0 END) CHECK_IN,
    SUM(CASE WHEN BB.stsPscTime IS NOT NULL THEN 1 ELSE 0 END) SECURITY_CHECK,
    SUM(CASE WHEN BB.stsBoardTime IS NOT NULL THEN 1 ELSE 0 END) BOARDING
    FROM T_PASSENGER_INFO BB
    WHERE BB.flightId = #{params.flightId,jdbcType=BIGINT}
    -->
    SELECT T.BAG_COUNT,
    T.OVER_STATION,
    T.CHECK_IN,
    T.SECURITY_CHECK,
    CASE WHEN T.BOARDING = 0 THEN T.SECURITY_CHECK - 1 ELSE T.BOARDING END BOARDING
    FROM (SELECT SUM(BB.dpsrBagCount) BAG_COUNT,
    SUM(CASE WHEN BB.stsBoardTime IS NOT NULL AND BB.stsPscIsPass = 2 THEN 1 ELSE 0 END) OVER_STATION,
    SUM(CASE WHEN BB.dpsrCheckinTime IS NOT NULL THEN 1 ELSE 0 END) CHECK_IN,
    SUM(CASE WHEN BB.stsPscTime IS NOT NULL THEN 1 ELSE 0 END) SECURITY_CHECK,
    SUM(CASE WHEN BB.stsBoardTime IS NOT NULL THEN 1 ELSE 0 END) BOARDING
    FROM T_PASSENGER_INFO BB
    WHERE BB.flightId = ${params.flightId}) T
  </select>


  <select id="findNodeConfigColumnInfo" resultMap="FishboneDiagramResultMap">
    SELECT NODE_SEQ,NODE_NAME,NODE_COLUMN,NODE_ESTIMATE_COLUMN,'' AS `VALUE`,'' AS ESTIMATE_VALUE,'' AS STATE
    FROM T_NODE_CONFIG_INFO
    WHERE ISAVAILABL = 1
    ORDER BY NODE_SEQ ASC
  </select>

  <select id="findFishboneDiagramInfo" resultType="java.util.HashMap" parameterType="map" statementType="STATEMENT">
    SELECT
      T.${params.nodeColumn}
    <choose>
      <when test="params.nodeEstimateColumn !=null and params.nodeEstimateColumn != ''">
        ,T.${params.nodeEstimateColumn}
      </when>
      <otherwise>
        ,'' AS NODE_ESTIMATE_COLUMN
      </otherwise>
    </choose>
    FROM
    V_UTIL_UNITE_FLIGHT T
    WHERE (T.FL_STATUS <![CDATA[<>]]> 'CAN' OR T.FL_STATUS IS NULL) AND (T.FL_STATUS_A <![CDATA[<>]]> 'CAN' OR T.FL_STATUS_A IS NULL)
    AND (T.FLIGHT_ID_D = ${params.flightId} OR T.FLIGHT_ID_A = ${params.flightId})

    <!--
    <choose>
      <when test="params.flightIdD != null">
        AND T.FLIGHT_ID_D = ${params.flightIdD}
      </when>
      <otherwise>
        AND T.FLIGHT_ID_A = ${params.flightIdA}
      </otherwise>
    </choose>
    -->
  </select>

  <select id="findFishboneDiagramData" resultType="map">
    SELECT
    <foreach collection="list" item="item" index="index" open="" close="" separator=",">
      <if test="item !=null and item != ''">
        `${item}`
      </if>
    </foreach>
    FROM
    V_UTIL_UNITE_FLIGHT T
    WHERE (T.FL_STATUS <![CDATA[<>]]> 'CAN' OR T.FL_STATUS IS NULL) AND (T.FL_STATUS_A <![CDATA[<>]]> 'CAN' OR T.FL_STATUS_A IS NULL)
    AND (T.FLIGHT_ID_D = ${params.flightId} OR T.FLIGHT_ID_A = ${params.flightId})
  </select>

  <select id="findFlightEvent" resultMap="FlightEventResultMap" parameterType="map" >
    SELECT `NAME`,DATE_FORMAT(`TIME`,'%H:%i') AS TIME,DATE_FORMAT(`TIME`,'%Y-%m-%d') AS DATE,DESCRIPTION
    FROM T_FLIGHT_EVENT
    WHERE 1=1
    <if test="params.flightIdD !=null and params.flightIdD != '' and params.flightIdA !=null and params.flightIdA != ''">
      AND (FLIGHT_ID = #{params.flightIdD,jdbcType=BIGINT} OR FLIGHT_ID = #{params.flightIdA,jdbcType=BIGINT})
    </if>
    ORDER BY `TIME` DESC
  </select>

  <select id="findTControlInfoByFlightId" resultType="com.hq.acdm.vo.dynamicFlight.FlowControlVo" parameterType="map" >
    SELECT A.CONTROL_ID controlId, CONCAT(A.ORIGINALSOURCE,'：',DATE_FORMAT(A.CONTROL_REAL_STARTTM, '%Y-%m-%d %H:%i'),'至',
    DATE_FORMAT(A.CONTROL_ALTERAT_ENDTM, '%Y-%m-%d %H:%i'),'：',A.CONTROL_CONTENT) control
    FROM T_CONTROL_INFO A
    LEFT JOIN T_CONTROL_MAP B ON A.CONTROL_ID = B.CONTROL_ID
    LEFT JOIN T_ATC_FLIGHT_INFO C ON C.FUID = B.FUID
    WHERE A.ISAVAILABLE = 1 AND (C.FLIGHTID = ${params.flightIdD} OR C.FLIGHTID = ${params.flightIdA})
    -- WHERE A.ISAVAILABLE = 1 AND C.FLIGHTID = ${params.flightId}
  </select>

  <update id="updateTobt" parameterType="map" >
    update T_LOCAL_FLIGHT_INFO
    set TOBT = #{params.tobt,jdbcType=VARCHAR}
    where FLIGHT_ID = ${params.flightId}
  </update>

  <update id="updateFishboneDiagramNodeInfo" parameterType="map" >
    update T_LOCAL_FLIGHT_INFO
    set

    <if test="params.value != null and params.value != ''" >
      `${params.nodeColumn}` = #{params.value,jdbcType=VARCHAR},
    </if>
    <if test="params.mark != null and params.mark != ''" >
      VCHAR_2=#{params.mark,jdbcType=VARCHAR},
    </if>

    UPDATE_USR=#{params.username,jdbcType=VARCHAR},UPDATE_TM=CURRENT_TIMESTAMP()
    where FLIGHT_ID = ${params.flightId}
  </update>

  <insert id="insertTlocalForprivate" parameterType="map" >
        insert into T_LOCAL_FLIGHT_INFO_FORPRIVATE (ID, FLIGHT_ID,`${params.filed}`,SOURCE,FIELD,CREATE_TM,CREATE_USR)
        values (REPLACE(UUID(),'-',''), #{params.flightId,jdbcType=VARCHAR},#{params.value,jdbcType=VARCHAR},'ACDMWEB',
          #{params.source,jdbcType=VARCHAR},CURRENT_TIMESTAMP(), #{params.username,jdbcType=VARCHAR})
    </insert>


  <select id="findFlightByFlowControlId" resultType="com.hq.acdm.vo.dynamicFlight.FlightFlowControlVo" parameterType="map" >
    SELECT A.FLIGHT_ID flightId,A.FLNO flno,A.ADES ades,A.SOBT sobt,A.TOBT tobt,A.CTOT ctot
    FROM T_LOCAL_FLIGHT_INFO A
    LEFT JOIN T_ATC_FLIGHT_INFO B ON A.FLIGHT_ID = B.FLIGHTID
    LEFT JOIN T_CONTROL_MAP C ON C.FUID = B.FUID
    WHERE A.ATOT IS NULL AND C.CONTROL_ID = #{params.controlId}
    ORDER BY A.SOBT ASC
  </select>

  <resultMap id="XlResultMap" type="com.hq.acdm.vo.dynamicFlight.XlVo" >
    <result column="XJ" property="xj" jdbcType="INTEGER" />
    <result column="XJS" property="xjs" jdbcType="VARCHAR" />
    <result column="XJEND" property="xjend" jdbcType="VARCHAR" />
    <result column="DD" property="dd" jdbcType="INTEGER" />
    <result column="DDS" property="dds" jdbcType="VARCHAR" />
    <result column="DDEND" property="ddend" jdbcType="VARCHAR" />
    <result column="ZJ" property="zj" jdbcType="INTEGER" />
    <result column="ZJS" property="zjs" jdbcType="VARCHAR" />
    <result column="ZJEND" property="zjend" jdbcType="VARCHAR" />
    <result column="AJ" property="aj" jdbcType="INTEGER" />
    <result column="AJS" property="ajs" jdbcType="VARCHAR" />
    <result column="AJEND" property="ajend" jdbcType="VARCHAR" />
    <result column="FJ" property="fj" jdbcType="INTEGER" />
    <result column="FJS" property="fjs" jdbcType="VARCHAR" />
    <result column="FJEND" property="fjend" jdbcType="VARCHAR" />
    <result column="ZC" property="zc" jdbcType="INTEGER" />
    <result column="ZCS" property="zcs" jdbcType="VARCHAR" />
    <result column="ZCEND" property="zcend" jdbcType="VARCHAR" />
    <result column="ZJI" property="zji" jdbcType="INTEGER" />
    <result column="ZJIS" property="zjis" jdbcType="VARCHAR" />
    <result column="ZJIEND" property="zjiend" jdbcType="VARCHAR" />
  </resultMap>

  <select id="findXl" resultMap="XlResultMap" parameterType="map" >
    SELECT COUNT(PROCESS_UNLOAD_AIRCRAFT_TIME) XJ,MIN(PROCESS_UNLOAD_AIRCRAFT_TIME) XJS,MAX(PROCESS_UNLOAD_AIRCRAFT_TIME) XJEND,
            COUNT(PROCESS_ARRIVED_TIME) DD,MIN(PROCESS_ARRIVED_TIME) DDS,MAX(PROCESS_ARRIVED_TIME) DDEND,
            COUNT(PROCESS_CHECK_IN_TIME) ZJ,MIN(PROCESS_CHECK_IN_TIME) ZJS,MAX(PROCESS_CHECK_IN_TIME) ZJEND,
            COUNT(PROCESS_SCHECK_TIME) AJ,MIN(PROCESS_SCHECK_TIME) AJS,MAX(PROCESS_SCHECK_TIME) AJEND,
            COUNT(PROCESS_SORTATION_TIME) FJ,MIN(PROCESS_SORTATION_TIME) FJS,MAX(PROCESS_SORTATION_TIME) FJEND,
            COUNT(PROCESS_LOAD_CAR_TIME) ZC,MIN(PROCESS_LOAD_CAR_TIME) ZCS,MAX(PROCESS_LOAD_CAR_TIME) ZCEND,
            COUNT(PROCESS_LOAD_AIRCRAFT_TIME) ZJI,MIN(PROCESS_LOAD_AIRCRAFT_TIME) ZJIS,MAX(PROCESS_LOAD_AIRCRAFT_TIME) ZJIEND
    FROM TB_BAGGAGE_INFO  WHERE EXEC_DATE=#{params.exec_date}   AND FLT_IS_OFF_IN=#{params.dora}  AND FLNO=#{params.flno}
            AND (PROCESS_CHECK_IN_TIME is NOT null OR PROCESS_SCHECK_TIME is NOT null OR
            PROCESS_SORTATION_TIME is NOT null OR PROCESS_LOAD_CAR_TIME is NOT null OR
            PROCESS_LOAD_AIRCRAFT_TIME is NOT null OR PROCESS_UNLOAD_AIRCRAFT_TIME is NOT null OR
            PROCESS_ARRIVED_TIME is NOT null )
  </select>
</mapper>