<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hq.acdm.dao.realtimeSituation.TFlightSupportRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hq.acdm.model.realtimeSituation.TFlightSupportRecord" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="FLIGHT_ID" property="flightId" jdbcType="INTEGER" />
    <result column="CLEAN" property="clean" jdbcType="VARCHAR" />
    <result column="BOARDING" property="boarding" jdbcType="VARCHAR" />
    <result column="CLOSE_DOOR" property="closeDoor" jdbcType="VARCHAR" />
    <result column="ROLL_OUT" property="rollOut" jdbcType="VARCHAR" />
    <result column="DELAY_REASON" property="delayReason" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="CREATE_EMP" property="createEmp" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_EMP" property="updateEmp" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, FLIGHT_ID, CLEAN, BOARDING, CLOSE_DOOR, ROLL_OUT, DELAY_REASON, REMARKS, CREATE_EMP, 
    CREATE_TIME, UPDATE_EMP, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hq.acdm.model.realtimeSituation.TFlightSupportRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_FLIGHT_SUPPORT_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_FLIGHT_SUPPORT_RECORD
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_FLIGHT_SUPPORT_RECORD
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hq.acdm.model.realtimeSituation.TFlightSupportRecordExample" >
    delete from T_FLIGHT_SUPPORT_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hq.acdm.model.realtimeSituation.TFlightSupportRecord" >
    insert into T_FLIGHT_SUPPORT_RECORD (ID, FLIGHT_ID, CLEAN, 
      BOARDING, CLOSE_DOOR, ROLL_OUT, 
      DELAY_REASON, REMARKS, CREATE_EMP, 
      CREATE_TIME, UPDATE_EMP, UPDATE_TIME
      )
    values (#{id,jdbcType=VARCHAR}, #{flightId,jdbcType=INTEGER}, #{clean,jdbcType=VARCHAR}, 
      #{boarding,jdbcType=VARCHAR}, #{closeDoor,jdbcType=VARCHAR}, #{rollOut,jdbcType=VARCHAR}, 
      #{delayReason,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createEmp,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateEmp,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hq.acdm.model.realtimeSituation.TFlightSupportRecord" >
    insert into T_FLIGHT_SUPPORT_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="flightId != null" >
        FLIGHT_ID,
      </if>
      <if test="clean != null" >
        CLEAN,
      </if>
      <if test="boarding != null" >
        BOARDING,
      </if>
      <if test="closeDoor != null" >
        CLOSE_DOOR,
      </if>
      <if test="rollOut != null" >
        ROLL_OUT,
      </if>
      <if test="delayReason != null" >
        DELAY_REASON,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
      <if test="createEmp != null" >
        CREATE_EMP,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateEmp != null" >
        UPDATE_EMP,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="flightId != null" >
        #{flightId,jdbcType=INTEGER},
      </if>
      <if test="clean != null" >
        #{clean,jdbcType=VARCHAR},
      </if>
      <if test="boarding != null" >
        #{boarding,jdbcType=VARCHAR},
      </if>
      <if test="closeDoor != null" >
        #{closeDoor,jdbcType=VARCHAR},
      </if>
      <if test="rollOut != null" >
        #{rollOut,jdbcType=VARCHAR},
      </if>
      <if test="delayReason != null" >
        #{delayReason,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createEmp != null" >
        #{createEmp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateEmp != null" >
        #{updateEmp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hq.acdm.model.realtimeSituation.TFlightSupportRecordExample" resultType="java.lang.Integer" >
    select count(*) from T_FLIGHT_SUPPORT_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_FLIGHT_SUPPORT_RECORD
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.flightId != null" >
        FLIGHT_ID = #{record.flightId,jdbcType=INTEGER},
      </if>
      <if test="record.clean != null" >
        CLEAN = #{record.clean,jdbcType=VARCHAR},
      </if>
      <if test="record.boarding != null" >
        BOARDING = #{record.boarding,jdbcType=VARCHAR},
      </if>
      <if test="record.closeDoor != null" >
        CLOSE_DOOR = #{record.closeDoor,jdbcType=VARCHAR},
      </if>
      <if test="record.rollOut != null" >
        ROLL_OUT = #{record.rollOut,jdbcType=VARCHAR},
      </if>
      <if test="record.delayReason != null" >
        DELAY_REASON = #{record.delayReason,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createEmp != null" >
        CREATE_EMP = #{record.createEmp,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateEmp != null" >
        UPDATE_EMP = #{record.updateEmp,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_FLIGHT_SUPPORT_RECORD
    set ID = #{record.id,jdbcType=VARCHAR},
      FLIGHT_ID = #{record.flightId,jdbcType=INTEGER},
      CLEAN = #{record.clean,jdbcType=VARCHAR},
      BOARDING = #{record.boarding,jdbcType=VARCHAR},
      CLOSE_DOOR = #{record.closeDoor,jdbcType=VARCHAR},
      ROLL_OUT = #{record.rollOut,jdbcType=VARCHAR},
      DELAY_REASON = #{record.delayReason,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR},
      CREATE_EMP = #{record.createEmp,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_EMP = #{record.updateEmp,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hq.acdm.model.realtimeSituation.TFlightSupportRecord" >
    update T_FLIGHT_SUPPORT_RECORD
    <set >
      <if test="flightId != null" >
        FLIGHT_ID = #{flightId,jdbcType=INTEGER},
      </if>
      <if test="clean != null" >
        CLEAN = #{clean,jdbcType=VARCHAR},
      </if>
      <if test="boarding != null" >
        BOARDING = #{boarding,jdbcType=VARCHAR},
      </if>
      <if test="closeDoor != null" >
        CLOSE_DOOR = #{closeDoor,jdbcType=VARCHAR},
      </if>
      <if test="rollOut != null" >
        ROLL_OUT = #{rollOut,jdbcType=VARCHAR},
      </if>
      <if test="delayReason != null" >
        DELAY_REASON = #{delayReason,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createEmp != null" >
        CREATE_EMP = #{createEmp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateEmp != null" >
        UPDATE_EMP = #{updateEmp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hq.acdm.model.realtimeSituation.TFlightSupportRecord" >
    update T_FLIGHT_SUPPORT_RECORD
    set FLIGHT_ID = #{flightId,jdbcType=INTEGER},
      CLEAN = #{clean,jdbcType=VARCHAR},
      BOARDING = #{boarding,jdbcType=VARCHAR},
      CLOSE_DOOR = #{closeDoor,jdbcType=VARCHAR},
      ROLL_OUT = #{rollOut,jdbcType=VARCHAR},
      DELAY_REASON = #{delayReason,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      CREATE_EMP = #{createEmp,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_EMP = #{updateEmp,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>


  <select id="selectByFlightId" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from T_FLIGHT_SUPPORT_RECORD
    where FLIGHT_ID = #{params.flightId}
  </select>


</mapper>