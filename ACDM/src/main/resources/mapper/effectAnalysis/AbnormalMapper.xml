<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hq.acdm.dao.effectAnalysis.AbnormalMapper" >

  <resultMap id="ResultMap" type="com.hq.acdm.vo.dynamicFlight.TLocalFlightInfoVo" >
    <result column="FLIGHT_ID_D" property="flightIdD" jdbcType="VARCHAR" />
    <result column="FLIGHT_ID_A" property="flightIdA" jdbcType="VARCHAR" />
    <result column="FLNO_D" property="flnoD" jdbcType="VARCHAR" />
    <result column="FLNO_A" property="flnoA" jdbcType="VARCHAR" />
    <result column="EXEC_DATE_D" property="execDateD" jdbcType="VARCHAR" />
    <result column="EXEC_DATE_A" property="execDateA" jdbcType="VARCHAR" />
    <result column="FL_STATUS" property="flStatus" jdbcType="VARCHAR" />
    <result column="AIRLINES" property="airlines" jdbcType="VARCHAR" />
    <result column="CRAFT_TYPE_ICAO" property="craftTypeIcao" jdbcType="VARCHAR" />
    <result column="CLASSIFICATION" property="classification" jdbcType="VARCHAR" />
    <result column="REGN" property="regn" jdbcType="VARCHAR" />
    <result column="ADEP_ADES_A" property="adepAdesA" jdbcType="VARCHAR" />
    <result column="ADEP_ADES_D" property="adepAdesD" jdbcType="VARCHAR" />
    <result column="ELDT_A_DATE" property="eldtADate" jdbcType="VARCHAR" />
    <result column="ELDT_A_TIME" property="eldtATime" jdbcType="VARCHAR" />
    <result column="ALDT_A_DATE" property="aldtADate" jdbcType="VARCHAR" />
    <result column="ALDT_A_TIME" property="aldtATime" jdbcType="VARCHAR" />
    <result column="ETOT_D_DATE" property="etotDDate" jdbcType="VARCHAR" />
    <result column="ETOT_D_TIME" property="etotDTime" jdbcType="VARCHAR" />
    <result column="ATOT_D_DATE" property="atotDDate" jdbcType="VARCHAR" />
    <result column="ATOT_D_TIME" property="atotDTime" jdbcType="VARCHAR" />
    <result column="STAND_A" property="standA" jdbcType="VARCHAR" />
    <result column="STAND_D" property="standD" jdbcType="VARCHAR" />
    <result column="RUNWAY_A" property="runwayA" jdbcType="VARCHAR" />
    <result column="RUNWAY_D" property="runwayD" jdbcType="VARCHAR" />
    <result column="CHANGE_TIME_A" property="changeTimeA" jdbcType="VARCHAR" />
    <result column="CHANGE_TIME_D" property="changeTimeD" jdbcType="VARCHAR" />
    <result column="SIBT" property="sibt" jdbcType="VARCHAR" />
    <result column="SOBT" property="sobt" jdbcType="VARCHAR" />
    <result column="ETOT" property="etot" jdbcType="VARCHAR" />
    <result column="ATOT" property="atot" jdbcType="VARCHAR" />
    <result column="ELDT" property="eldt" jdbcType="VARCHAR" />
    <result column="ALDT" property="aldt" jdbcType="VARCHAR" />
    <result column="COBT" property="cobt" jdbcType="VARCHAR" />
    <result column="CTOT" property="ctot" jdbcType="VARCHAR" />
    <result column="TOBT" property="tobt" jdbcType="VARCHAR" />
    <result column="A_TOBT" property="aTobt" jdbcType="VARCHAR" />
    <result column="ISCONTROL" property="iscontrol" jdbcType="VARCHAR" />
    <result column="EIBT" property="eibt" jdbcType="VARCHAR" />
    <result column="AIBT" property="aibt" jdbcType="VARCHAR" />
    <result column="EOBT" property="eobt" jdbcType="VARCHAR" />
    <result column="AOBT" property="aobt" jdbcType="VARCHAR" />
    <result column="ETDO" property="etdo" jdbcType="VARCHAR" />
    <result column="ETDC" property="etdc" jdbcType="VARCHAR" />
    <result column="ATDO" property="atdo" jdbcType="VARCHAR" />
    <result column="ATDC" property="atdc" jdbcType="VARCHAR" />
    <result column="ATDC_STATUS" property="atdcStatus" jdbcType="VARCHAR" />
    <result column="ETFO" property="etfo" jdbcType="VARCHAR" />
    <result column="ETFC" property="etfc" jdbcType="VARCHAR" />
    <result column="ATFO" property="atfo" jdbcType="VARCHAR" />
    <result column="ATFC" property="atfc" jdbcType="VARCHAR" />
    <result column="ESCT" property="esct" jdbcType="VARCHAR" />
    <result column="EFCT" property="efct" jdbcType="VARCHAR" />
    <result column="ASCT" property="asct" jdbcType="VARCHAR" />
    <result column="AFCT" property="afct" jdbcType="VARCHAR" />
    <result column="ESC" property="esc" jdbcType="VARCHAR" />
    <result column="EEC" property="eec" jdbcType="VARCHAR" />
    <result column="ASC" property="asc" jdbcType="VARCHAR" />
    <result column="AEC" property="aec" jdbcType="VARCHAR" />
    <result column="ESR" property="esr" jdbcType="VARCHAR" />
    <result column="EER" property="eer" jdbcType="VARCHAR" />
    <result column="ASR" property="asr" jdbcType="VARCHAR" />
    <result column="AER" property="aer" jdbcType="VARCHAR" />
    <result column="ESBT" property="esbt" jdbcType="VARCHAR" />
    <result column="EEBT" property="eebt" jdbcType="VARCHAR" />
    <result column="ASBT" property="asbt" jdbcType="VARCHAR" />
    <result column="AEBT" property="aebt" jdbcType="VARCHAR" />
    <result column="ERSL" property="ersl" jdbcType="VARCHAR" />
    <result column="ELSW" property="elsw" jdbcType="VARCHAR" />
    <result column="ARSL" property="arsl" jdbcType="VARCHAR" />
    <result column="ALSW" property="alsw" jdbcType="VARCHAR" />
    <result column="A_GRND_TSF_TM" property="aGrndTsfTm" jdbcType="VARCHAR" />
    <result column="D_GRND_TSF_TM" property="dGrndTsfTm" jdbcType="VARCHAR" />
    <result column="DELAY_TIME" property="delayTime" jdbcType="VARCHAR" />
    <result column="REASONS_FOR_AUTO" property="reasonsForAuto" jdbcType="VARCHAR" />
    <result column="BOARDING" property="boarding" jdbcType="VARCHAR" />
    <result column="CLOSE_DOOR" property="closeDoor" jdbcType="VARCHAR" />
    <result column="ROLL_OUT" property="rollOut" jdbcType="VARCHAR" />
  </resultMap>



  <select id="getAbnormal" resultMap="ResultMap" parameterType="map" >

    SELECT D.FLIGHT_ID FLIGHT_ID_D, -- 离港航班唯一ID
    A.FLIGHT_ID FLIGHT_ID_A, -- 进港航班唯一ID
    (CASE WHEN  'DA'= #{params.atype,jdbcType=VARCHAR} THEN D.DELAY_TIME
    WHEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0) > 0)
    THEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0))
    ELSE 0 END) AS DELAY_TIME, -- 延误时长
    -- IF((IFNULL(S.DELAY_REASON,'') = ''),D.REASONS_FOR_AUTO,S.DELAY_REASON) AS REASONS_FOR_AUTO,-- 延误分析原因
    S.DELAY_REASON AS REASONS_FOR_AUTO,-- 延误分析原因
    S.BOARDING,-- 晚登机原因
    S.CLOSE_DOOR,-- 晚关门原因
    S.ROLL_OUT,-- 晚推出原因
    <![CDATA[
    D.FLNO FLNO_D,-- 出港航班号
    A.FLNO FLNO_A,-- 进港航班号
    D.EXEC_DATE EXEC_DATE_D,-- 出港日期
    A.EXEC_DATE EXEC_DATE_A,-- 进港日期
    B.CHINESE_NAME AS FL_STATUS,-- 出港航班状态
    -- BB.CHINESE_NAME AS FL_STATUS_A,-- 进港航班状态
    D.AIRLINES, -- 航空公司2码
    D.CRAFT_TYPE_ICAO, -- 机型
    -- E.CLASSIFICATION, -- 机型大类
    D.REGN AS REGN, -- 机号
    -- CONCAT(C.CHINESE_NAME,IF(IFNULL(C.CHINESE_NAME,'')='','','>'),D.CHINESE_NAME,IF(IFNULL(DD.CHINESE_NAME,'')='','','>'),DD.CHINESE_NAME) AS ADEP_ADES, -- 起落机场
    CONCAT(A.ADEP,IF(IFNULL(A.ADEP,'')='','','>'),A.ADES) AS ADEP_ADES_A, -- 进港起落机场
    CONCAT(D.ADEP,IF(IFNULL(D.ADEP,'')='','','>'),D.ADES) AS ADEP_ADES_D, -- 出港起落机场
    DATE_FORMAT(A.ELDT,'%Y%m%d') AS ELDT_A_DATE, -- 预计落地日期
    DATE_FORMAT(A.ELDT,'%H:%i') AS ELDT_A_TIME,-- 预计落地时间
    DATE_FORMAT(A.ALDT,'%Y%m%d') AS ALDT_A_DATE, -- 实际落地日期
    DATE_FORMAT(A.ALDT,'%H:%i') AS ALDT_A_TIME,-- 实际落地时间
    D.SOBT,-- 计划起飞时间
    D.ETOT,-- 预计起飞时间
    D.ATOT,-- 实际起飞时间
    A.SIBT,-- 计划落地时间
    A.ELDT,-- 预计落地时间
    A.ALDT,-- 实际落地时间
    DATE_FORMAT(D.ETOT,'%Y%m%d') AS ETOT_D_DATE, -- 预计起飞日期
    DATE_FORMAT(D.ETOT,'%H:%i') AS ETOT_D_TIME,-- 预计起飞时间
    DATE_FORMAT(D.ATOT,'%Y%m%d') AS ATOT_D_DATE, -- 实际起飞日期
    DATE_FORMAT(D.ATOT,'%H:%i') AS ATOT_D_TIME,-- 实际起飞时间
    A.STAND STAND_A, -- 进港机位
    D.STAND STAND_D, -- 离港机位
    A.RUNWAY RUNWAY_A,-- 进港跑道号
    D.RUNWAY RUNWAY_D,-- 离港跑道号
    A.AXIT AS CHANGE_TIME_A, -- 可变滑入时间
    D.AXOT AS CHANGE_TIME_D, -- 可变滑出时间
    D.COBT,-- 离港计算撤轮档时间COBT
    D.CTOT,-- 离港计算起飞时间CTOT
    D.TOBT,-- 离港目标撤轮档时间TOBT
    D.A_TOBT,-- 离港机场目标撤轮档时间A_TOBT
    CASE D.ISCONTROL WHEN '0' THEN '否' WHEN '1' THEN '是' ELSE '否' END AS ISCONTROL, -- 是否流控
    A.EIBT, -- 预计上轮档时间EIBT
    A.AIBT, -- 实际上轮档时间AIBT
    D.EOBT, -- 预计撤轮当时间EOBT
    D.AOBT, -- 实际撤轮档时间AOBT
    A.ETDO,-- 预计开客舱门时间ETDO
    D.STDC AS ETDC,-- 预计关客舱门时间ETDC
    A.ATDO,-- 实际开客舱门时间ATDO
    D.ATDC,-- 实际关客舱门时间ATDC
    CASE WHEN D.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),D.STDC) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),D.STDC) <= 15 THEN 1
    WHEN D.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,D.STDC,NOW()) >= 0 THEN 2
    WHEN D.ATDC IS NOT NULL AND TIMESTAMPDIFF(MINUTE,D.STDC,D.ATDC) > 0 THEN 3 ELSE 0 END AS ATDC_STATUS,-- 关客舱门状态
    A.ETFO,-- 预计开货舱门时间ETFO
    D.ETFC,-- 预计关货舱门时间ETFC
    A.ATFO,-- 实际开货舱门时间 ATFO
    D.ATFC,-- 实际关货舱门时间ATFC
    D.ESCT, -- 预计保洁开始时间ESCT
    D.EFCT,-- 预计保洁结束时间EFCT
    D.ASCT, -- 实际保洁开始时间ASCT
    D.AFCT,-- 实际保洁结束时间AFCT
    D.ESC, -- 预计开始配餐时间ESC
    D.EEC,-- 预计完成配餐时间EEC
    D.`ASC`, -- 实际开始配餐时间ASC
    D.AEC,-- 实际完成配餐时间AEC
    D.ESR, -- 预计开始供油时间ESR
    D.EER,-- 预计完成供油时间EER
    D.ASR, -- 实际开始供油时间ASR
    D.AER,-- 实际完成供油时间AER
    D.ESBT, -- 预计开始登机时间ESBT
    D.EEBT,-- 预计完成登机时间EEBT
    D.ASBT, -- 实际开始登机时间ASBT
    D.AEBT,-- 实际完成登机时间AEBT
    A.ERSL,-- 预计靠桥时间（客梯或桥）ERSL
    D.ELSW,-- 预计离桥时间/撤客梯车时间ELSW
    A.ARSL,-- 实际靠桥时间（客梯或桥）ARSL
    D.ALSW,-- 实际离桥时间/撤客梯车时间ALSW
    A.A_GRND_TSF_TM A_GRND_TSF_TM, -- 进港地面移交时间
    D.A_GRND_TSF_TM D_GRND_TSF_TM, -- 离港地面移交时间

    CASE WHEN (A.ALDT IS NOT NULL OR A.FLIGHT_ID IS NULL) THEN 3 ELSE 0 END AS PAIXU
    ]]>
    FROM (SELECT * FROM
    T_LOCAL_FLIGHT_INFO WHERE D_OR_A='D'  AND EXEC_DATE BETWEEN #{params.startDate} AND #{params.endDate} UNION
    SELECT * FROM T_LOCAL_FLIGHT_INFO_HISTORY WHERE D_OR_A='D'
    AND EXEC_DATE BETWEEN #{params.startDate} AND #{params.endDate}) D
    LEFT JOIN  (SELECT * FROM
    T_LOCAL_FLIGHT_INFO WHERE D_OR_A='A' AND ASSOCIATED_FLIGHT_ID IS NOT NULL  AND EXEC_DATE BETWEEN DATE_ADD(#{params.startDate},INTERVAL -1 DAY) AND #{params.endDate}  UNION
    SELECT * FROM T_LOCAL_FLIGHT_INFO_HISTORY WHERE D_OR_A='A' AND ASSOCIATED_FLIGHT_ID IS NOT NULL  AND EXEC_DATE BETWEEN DATE_ADD(#{params.startDate},INTERVAL -1 DAY) AND #{params.endDate} ) A ON D.FLIGHT_ID=A.ASSOCIATED_FLIGHT_ID
    LEFT JOIN T_FLIGHT_STATUS B ON D.NORMAL_FLIGHT_STAT_CD = B.`CODE`
    -- LEFT JOIN T_FLIGHT_STATUS BB ON A.NORMAL_FLIGHT_STAT_CD = BB.`CODE`
    -- LEFT JOIN T_CRAFT_TYPE E ON E.ICAO_CD = D.CRAFT_TYPE_ICAO
    -- LEFT JOIN T_AIRPORT C ON T.ADEP_A = C.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT D ON T.ADES_A = D.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT DD ON T.ADES_D = DD.AIRPORT_IATA
    LEFT JOIN T_FLIGHT_SUPPORT_RECORD S ON D.FLIGHT_ID = S.FLIGHT_ID
    WHERE <![CDATA[ D.ABNORMAL_FLIGHT_STAT_CD <> 'CAN' AND  IFNULL(A.ABNORMAL_FLIGHT_STAT_CD ,'')  <> 'CAN'  AND D.ISDEL<>'1'  AND D.D_OR_A='D'   ]]>
    AND ((D.AIRLINES IN ('UW','O3','CF','OZ','Y8','GI') and D.FLIGHT_TASK IN ('W/Z','L/W','C/B','H/G','H/Y','H/Z')) or
         (D.AIRLINES NOT IN ('UW','O3','CF','OZ','Y8','GI') and D.FLIGHT_TASK IN ('W/Z','L/W','C/B')))


    <if test="params.flno !=null and params.flno != ''">
      AND (D.FLNO LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%') OR A.FLNO LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%'))
    </if>
    <if test="params.airlines !=null and params.airlines != ''">
      AND D.AIRLINES = #{params.airlines,jdbcType=VARCHAR}
    </if>
    <if test="params.atype !=null and params.atype == 'NA'">
      AND D.STDC<![CDATA[<]]>D.ATDC
    </if>
    <if test="params.atype !=null and params.atype == 'DA'">
      AND  D.DELAY_TIME >0
    </if>
    <if test="params.agent !=null and params.agent == 'GH'">
      AND D.AIRLINES IN ('CA','ZH')
    </if>
    <if test="params.agent !=null and params.agent == 'NH'">
      AND D.AIRLINES IN ('CZ','OQ')
    </if>
    <if test="params.agent !=null and params.agent == 'DH'">
      AND D.AIRLINES IN ('FM','MU')
    </if>
    <if test="params.agent !=null and params.agent == 'HY'">
      AND D.AIRLINES IN ('UW','O3','CF','OZ','Y8','GI')
    </if>
    <if test="params.agent !=null and params.agent == 'DF'">
      AND D.AIRLINES NOT IN ('CA','ZH','CZ','OQ','FM','MU','UW','O3','CF','OZ','Y8','XX')
    </if>
    <if test="params.atype !=null and params.atype == 'FA'">
      <![CDATA[
      -- AND T.FL_STATUS = 'DLY'
      -- AND (T.FL_STATUS = 'DLY' OR T.FL_STATUS_A = 'DLY')

      AND (CASE WHEN A.FLIGHT_ID IS NULL THEN D.DELAY_TIME
      WHEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0) > 0)
      THEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0))
      ELSE 0 END) > 0
      ]]>
    </if>
      ORDER BY PAIXU DESC, D.SOBT ASC
  </select>

  <select id="getAbnormalHis" resultMap="ResultMap" parameterType="map" >
    SELECT D.FLIGHT_ID FLIGHT_ID_D, -- 离港航班唯一ID
    A.FLIGHT_ID FLIGHT_ID_A, -- 进港航班唯一ID
    (CASE WHEN  'DA'= #{params.atype,jdbcType=VARCHAR} THEN D.DELAY_TIME
    WHEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0) > 0)
    THEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0))
    ELSE 0 END) AS DELAY_TIME, -- 延误时长
    D.REASONS_FOR_AUTO,-- 延误分析原因
    <![CDATA[
    D.FLNO FLNO_D,-- 出港航班号
    A.FLNO FLNO_A,-- 进港航班号
    D.EXEC_DATE EXEC_DATE_D,-- 出港日期
    A.EXEC_DATE EXEC_DATE_A,-- 进港日期
    B.CHINESE_NAME AS FL_STATUS,-- 出港航班状态
    BB.CHINESE_NAME AS FL_STATUS_A,-- 进港航班状态
    D.AIRLINES, -- 航空公司2码
    D.CRAFT_TYPE_ICAO, -- 机型
    E.CLASSIFICATION, -- 机型大类
    D.REGN AS REGN, -- 机号
    -- CONCAT(C.CHINESE_NAME,IF(IFNULL(C.CHINESE_NAME,'')='','','>'),D.CHINESE_NAME,IF(IFNULL(DD.CHINESE_NAME,'')='','','>'),DD.CHINESE_NAME) AS ADEP_ADES, -- 起落机场
    CONCAT(A.ADEP,IF(IFNULL(A.ADEP,'')='','','>'),A.ADES) AS ADEP_ADES_A, -- 进港起落机场
    CONCAT(D.ADEP,IF(IFNULL(D.ADEP,'')='','','>'),D.ADES) AS ADEP_ADES_D, -- 出港起落机场
    DATE_FORMAT(A.ELDT,'%Y%m%d') AS ELDT_A_DATE, -- 预计落地日期
    DATE_FORMAT(A.ELDT,'%H:%i') AS ELDT_A_TIME,-- 预计落地时间
    DATE_FORMAT(A.ALDT,'%Y%m%d') AS ALDT_A_DATE, -- 实际落地日期
    DATE_FORMAT(A.ALDT,'%H:%i') AS ALDT_A_TIME,-- 实际落地时间
    D.SOBT,-- 计划起飞时间
    A.SIBT,-- 计划落地时间
    DATE_FORMAT(D.ETOT,'%Y%m%d') AS ETOT_D_DATE, -- 预计起飞日期
    DATE_FORMAT(D.ETOT,'%H:%i') AS ETOT_D_TIME,-- 预计起飞时间
    DATE_FORMAT(D.ATOT,'%Y%m%d') AS ATOT_D_DATE, -- 实际起飞日期
    DATE_FORMAT(D.ATOT,'%H:%i') AS ATOT_D_TIME,-- 实际起飞时间
    A.STAND STAND_A, -- 进港机位
    D.STAND STAND_D, -- 离港机位
    A.RUNWAY RUNWAY_A,-- 进港跑道号
    D.RUNWAY RUNWAY_D,-- 离港跑道号
    A.AXIT AS CHANGE_TIME_A, -- 可变滑入时间
    D.AXOT AS CHANGE_TIME_D, -- 可变滑出时间
    D.COBT,-- 离港计算撤轮档时间COBT
    D.CTOT,-- 离港计算起飞时间CTOT
    D.TOBT,-- 离港目标撤轮档时间TOBT
    D.A_TOBT,-- 离港机场目标撤轮档时间A_TOBT
    CASE D.ISCONTROL WHEN '0' THEN '否' WHEN '1' THEN '是' ELSE '否' END AS ISCONTROL, -- 是否流控
    A.EIBT, -- 预计上轮档时间EIBT
    A.AIBT, -- 实际上轮档时间AIBT
    D.EOBT, -- 预计撤轮当时间EOBT
    D.AOBT, -- 实际撤轮档时间AOBT
    A.ETDO,-- 预计开客舱门时间ETDO
    D.STDC AS ETDC,-- 预计关客舱门时间ETDC
    A.ATDO,-- 实际开客舱门时间ATDO
    D.ATDC,-- 实际关客舱门时间ATDC
    CASE WHEN D.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,NOW(),D.STDC) > 0 AND TIMESTAMPDIFF(MINUTE,NOW(),D.STDC) <= 15 THEN 1
    WHEN D.ATDC IS NULL AND TIMESTAMPDIFF(MINUTE,D.STDC,NOW()) >= 0 THEN 2
    WHEN D.ATDC IS NOT NULL AND TIMESTAMPDIFF(MINUTE,D.STDC,D.ATDC) > 0 THEN 3 ELSE 0 END AS ATDC_STATUS,-- 关客舱门状态
    A.ETFO,-- 预计开货舱门时间ETFO
    D.ETFC,-- 预计关货舱门时间ETFC
    A.ATFO,-- 实际开货舱门时间 ATFO
    D.ATFC,-- 实际关货舱门时间ATFC
    D.ESCT, -- 预计保洁开始时间ESCT
    D.EFCT,-- 预计保洁结束时间EFCT
    D.ASCT, -- 实际保洁开始时间ASCT
    D.AFCT,-- 实际保洁结束时间AFCT
    D.ESC, -- 预计开始配餐时间ESC
    D.EEC,-- 预计完成配餐时间EEC
    D.`ASC`, -- 实际开始配餐时间ASC
    D.AEC,-- 实际完成配餐时间AEC
    D.ESR, -- 预计开始供油时间ESR
    D.EER,-- 预计完成供油时间EER
    D.ASR, -- 实际开始供油时间ASR
    D.AER,-- 实际完成供油时间AER
    D.ESBT, -- 预计开始登机时间ESBT
    D.EEBT,-- 预计完成登机时间EEBT
    D.ASBT, -- 实际开始登机时间ASBT
    D.AEBT,-- 实际完成登机时间AEBT
    A.ERSL,-- 预计靠桥时间（客梯或桥）ERSL
    D.ELSW,-- 预计离桥时间/撤客梯车时间ELSW
    A.ARSL,-- 实际靠桥时间（客梯或桥）ARSL
    D.ALSW,-- 实际离桥时间/撤客梯车时间ALSW
    A.A_GRND_TSF_TM A_GRND_TSF_TM, -- 进港地面移交时间
    D.A_GRND_TSF_TM D_GRND_TSF_TM, -- 离港地面移交时间

    CASE WHEN (A.ALDT IS NOT NULL OR A.FLIGHT_ID IS NULL) THEN 3 ELSE 0 END AS PAIXU
    FROM T_LOCAL_FLIGHT_INFO_HISTORY D
    LEFT JOIN  T_LOCAL_FLIGHT_INFO_HISTORY A ON D.FLIGHT_ID=A.ASSOCIATED_FLIGHT_ID
    LEFT JOIN T_FLIGHT_STATUS B ON D.NORMAL_FLIGHT_STAT_CD = B.`CODE`
    LEFT JOIN T_FLIGHT_STATUS BB ON A.NORMAL_FLIGHT_STAT_CD = BB.`CODE`
    LEFT JOIN T_CRAFT_TYPE E ON E.ICAO_CD = D.CRAFT_TYPE_ICAO
    -- LEFT JOIN T_AIRPORT C ON T.ADEP_A = C.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT D ON T.ADES_A = D.AIRPORT_IATA
    -- LEFT JOIN T_AIRPORT DD ON T.ADES_D = DD.AIRPORT_IATA
    WHERE D.ABNORMAL_FLIGHT_STAT_CD <> 'CAN' AND  IFNULL(A.ABNORMAL_FLIGHT_STAT_CD ,'')  <> 'CAN' AND D.D_OR_A='D'
     AND D.FLIGHT_TASK IN ('W/Z','H/Z','C/B','H/G','H/Y')
    ]]>
    <if test="params.execDate != null  and params.execDate != '' ">
      AND D.EXEC_DATE = ${params.execDate}
    </if>
    <if test="params.flno !=null and params.flno != ''">
      AND (D.FLNO LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%') OR A.FLNO LIKE CONCAT('%',#{params.flno,jdbcType=VARCHAR},'%'))
    </if>
    <if test="params.airlines !=null and params.airlines != ''">
      AND D.AIRLINES = #{params.airlines,jdbcType=VARCHAR}
    </if>
    <if test="params.atype !=null and params.atype == 'NA'">
      AND D.STDC<![CDATA[<]]>D.ATDC
    </if>
    <if test="params.atype !=null and params.atype == 'DA'">
      AND  D.DELAY_TIME >0
    </if>
    <if test="params.agent !=null and params.agent == 'GH'">
      AND D.AIRLINES IN ('CA','ZH')
    </if>
    <if test="params.agent !=null and params.agent == 'NH'">
      AND D.AIRLINES IN ('CZ','OQ')
    </if>
    <if test="params.agent !=null and params.agent == 'DH'">
      AND D.AIRLINES IN ('FM','MU')
    </if>
    <if test="params.agent !=null and params.agent == 'HY'">
      AND D.AIRLINES IN ('UW','O3','CF','OZ','Y8')
    </if>
    <if test="params.agent !=null and params.agent == 'DF'">
      AND D.AIRLINES NOT IN ('CA','ZH','CZ','OQ','FM','MU','UW','O3','CF','OZ','Y8')
    </if>
    <if test="params.atype !=null and params.atype == 'FA'">
      <![CDATA[
      -- AND T.FL_STATUS = 'DLY'
      -- AND (T.FL_STATUS = 'DLY' OR T.FL_STATUS_A = 'DLY')

      AND (CASE WHEN A.FLIGHT_ID IS NULL THEN D.DELAY_TIME
      WHEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0) > 0)
      THEN (IFNULL(D.DELAY_TIME,0) - IFNULL(A.DELAY_TIME,0))
      ELSE 0 END) > 0
      ]]>
    </if>

    ORDER BY PAIXU DESC, D.SOBT ASC
  </select>

  <resultMap id="BaseResultMapCurren" type="com.hq.acdm.vo.dynamicFlight.TEnvelopeMsgVo" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="FLID" property="flid" jdbcType="VARCHAR" />
    <result column="FLNO" property="flno" jdbcType="VARCHAR" />
    <result column="OP" property="op" jdbcType="VARCHAR" />
    <result column="CTOT" property="ctot" jdbcType="VARCHAR" />
    <result column="FLIDTWO" property="flidtwo" jdbcType="VARCHAR" />
    <result column="FLNOTWO" property="flnotwo" jdbcType="VARCHAR" />
    <result column="CTOTTWO" property="ctottwo" jdbcType="VARCHAR" />
    <result column="CONTROL_ID" property="controlId" jdbcType="VARCHAR" />
    <result column="EXEC_DATE" property="execDate" jdbcType="VARCHAR" />
    <result column="AIRLINES" property="airlines" jdbcType="VARCHAR" />
    <result column="AIRLINESTWO" property="airlinestwo" jdbcType="VARCHAR" />
    <result column="DEPARTMENT" property="department" jdbcType="VARCHAR" />
    <result column="DEPARTMENTTWO" property="departmenttwo" jdbcType="VARCHAR" />
    <result column="MSG" property="msg" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="TYPENAME" property="typename" jdbcType="VARCHAR" />
    <result column="FLAG" property="flag" jdbcType="VARCHAR" />
    <result column="AOBT" property="aobt" jdbcType="VARCHAR" />
    <result column="NUMS" property="num" jdbcType="VARCHAR" />
    <result column="ISNEW" property="isnew" jdbcType="VARCHAR" />
    <result column="RMK" property="rmk" jdbcType="VARCHAR" />
    <result column="CREATE_TM" property="createTm" jdbcType="VARCHAR" />
    <result column="UPDATE_TM" property="updateTm" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getEnvelopMsg" resultMap="BaseResultMapCurren"   parameterType="map">
    SELECT * from T_ENVELOPE_MSG WHERE
      EXEC_DATE BETWEEN #{params.startDate} AND #{params.endDate}
    <if test="params.op !=null and params.op != ''">
      AND OP = #{params.op,jdbcType=VARCHAR}
    </if>
    AND DEPARTMENT = #{params.department,jdbcType=VARCHAR}
    ORDER BY IF(UPDATE_TM!=NULL,UPDATE_TM,CREATE_TM) DESC
  </select>

  <update id="updateMsgUser" parameterType="map" >
    update T_ENVELOPE_MSG
    set USERNAME = #{params.username,jdbcType=VARCHAR},UPDATE_TM=NOW(),ISNEW='9'
    where FLID = #{params.flid,jdbcType=VARCHAR} and OP = #{params.op,jdbcType=VARCHAR}
  </update>

</mapper>